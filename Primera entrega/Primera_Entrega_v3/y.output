Terminals unused in grammar

   FOR
   TO
   DO
   ENDFOR
   OP_NOT
   CAR_PUNTO
   LONG
   IN


Gramática

    0 $accept: programa $end

    1 $@1: /* vacío */

    2 programa: PROGRAM $@1 est_declaracion algoritmo

    3 $@2: /* vacío */

    4 est_declaracion: DECVAR $@2 declaraciones ENDDEC

    5 $@3: /* vacío */

    6 est_declaracion: DEFVAR $@3 declaraciones ENDDEF

    7 declaraciones: declaracion
    8              | declaraciones declaracion

    9 declaracion: lista_var OP_DOSP REAL
   10            | lista_var OP_DOSP STRING
   11            | lista_var OP_DOSP INTEGER

   12 lista_var: ID
   13          | lista_var CAR_COMA ID

   14 $@4: /* vacío */

   15 algoritmo: BEGINP $@4 bloque ENDP

   16 bloque: sentencia
   17       | bloque sentencia

   18 sentencia: ciclo
   19          | seleccion
   20          | asignacion
   21          | entrada_salida
   22          | between

   23 $@5: /* vacío */

   24 ciclo: REPEAT $@5 bloque UNTIL condicion

   25 $@6: /* vacío */

   26 ciclo: WHILE $@6 CAR_PA condicion CAR_PC bloque ENDW

   27 asignacion: lista_id OP_ASIG expresion

   28 lista_id: lista_id OP_ASIG ID
   29         | ID

   30 $@7: /* vacío */

   31 entrada_salida: READ $@7 ID

   32 $@8: /* vacío */

   33 entrada_salida: WRITE $@8 ID

   34 $@9: /* vacío */

   35 entrada_salida: WRITE $@9 CONST_STR

   36 seleccion: IF CAR_PA condicion CAR_PC THEN bloque ENDIF
   37          | IF CAR_PA condicion CAR_PC THEN bloque ELSE bloque ENDIF

   38 condicion: comparacion
   39          | comparacion OP_AND comparacion
   40          | comparacion OP_OR comparacion

   41 comparacion: expresion OP_COMPARACION expresion

   42 expresion: termino
   43          | expresion OP_SURES termino

   44 between: BETWEEN CAR_PA ID CAR_COMA CAR_CA expresion CAR_PYC expresion CAR_CC CAR_PC

   45 termino: factor
   46        | termino OP_MULTDIV factor

   47 factor: ID
   48       | CONST_INT
   49       | CONST_REAL
   50       | CONST_STR
   51       | CAR_PA expresion CAR_PC


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
PROGRAM (258) 2
DECVAR (259) 4
ENDDEC (260) 4
DEFVAR (261) 6
ENDDEF (262) 6
CONST_INT (263) 48
CONST_REAL (264) 49
CONST_STR (265) 35 50
REAL (266) 9
INTEGER (267) 11
STRING (268) 10
BEGINP (269) 15
ENDP (270) 15
IF (271) 36 37
THEN (272) 36 37
ELSE (273) 37
ENDIF (274) 36 37
FOR (275)
TO (276)
DO (277)
ENDFOR (278)
WHILE (279) 26
ENDW (280) 26
REPEAT (281) 24
UNTIL (282) 24
OP_AND (283) 39
OP_OR (284) 40
OP_NOT (285)
ID (286) 12 13 28 29 31 33 44 47
OP_COMPARACION (287) 41
OP_ASIG (288) 27 28
OP_DOSP (289) 9 10 11
OP_SURES (290) 43
OP_MULTDIV (291) 46
CAR_COMA (292) 13 44
CAR_PUNTO (293)
CAR_PYC (294) 44
CAR_PA (295) 26 36 37 44 51
CAR_PC (296) 26 36 37 44 51
CAR_CA (297) 44
CAR_CC (298) 44
LONG (299)
BETWEEN (300) 44
IN (301)
WRITE (302) 33 35
READ (303) 31


No terminales con las reglas donde aparecen

$accept (49)
    en la izquierda: 0
programa (50)
    en la izquierda: 2, en la derecha: 0
$@1 (51)
    en la izquierda: 1, en la derecha: 2
est_declaracion (52)
    en la izquierda: 4 6, en la derecha: 2
$@2 (53)
    en la izquierda: 3, en la derecha: 4
$@3 (54)
    en la izquierda: 5, en la derecha: 6
declaraciones (55)
    en la izquierda: 7 8, en la derecha: 4 6 8
declaracion (56)
    en la izquierda: 9 10 11, en la derecha: 7 8
lista_var (57)
    en la izquierda: 12 13, en la derecha: 9 10 11 13
algoritmo (58)
    en la izquierda: 15, en la derecha: 2
$@4 (59)
    en la izquierda: 14, en la derecha: 15
bloque (60)
    en la izquierda: 16 17, en la derecha: 15 17 24 26 36 37
sentencia (61)
    en la izquierda: 18 19 20 21 22, en la derecha: 16 17
ciclo (62)
    en la izquierda: 24 26, en la derecha: 18
$@5 (63)
    en la izquierda: 23, en la derecha: 24
$@6 (64)
    en la izquierda: 25, en la derecha: 26
asignacion (65)
    en la izquierda: 27, en la derecha: 20
lista_id (66)
    en la izquierda: 28 29, en la derecha: 27 28
entrada_salida (67)
    en la izquierda: 31 33 35, en la derecha: 21
$@7 (68)
    en la izquierda: 30, en la derecha: 31
$@8 (69)
    en la izquierda: 32, en la derecha: 33
$@9 (70)
    en la izquierda: 34, en la derecha: 35
seleccion (71)
    en la izquierda: 36 37, en la derecha: 19
condicion (72)
    en la izquierda: 38 39 40, en la derecha: 24 26 36 37
comparacion (73)
    en la izquierda: 41, en la derecha: 38 39 40
expresion (74)
    en la izquierda: 42 43, en la derecha: 27 41 43 44 51
between (75)
    en la izquierda: 44, en la derecha: 22
termino (76)
    en la izquierda: 45 46, en la derecha: 42 43 46
factor (77)
    en la izquierda: 47 48 49 50 51, en la derecha: 45 46


estado 0

    0 $accept: . programa $end

    PROGRAM  desplazar e ir al estado 1

    programa  ir al estado 2


estado 1

    2 programa: PROGRAM . $@1 est_declaracion algoritmo

    $default  reduce usando la regla 1 ($@1)

    $@1  ir al estado 3


estado 2

    0 $accept: programa . $end

    $end  desplazar e ir al estado 4


estado 3

    2 programa: PROGRAM $@1 . est_declaracion algoritmo

    DECVAR  desplazar e ir al estado 5
    DEFVAR  desplazar e ir al estado 6

    est_declaracion  ir al estado 7


estado 4

    0 $accept: programa $end .

    $default  aceptar


estado 5

    4 est_declaracion: DECVAR . $@2 declaraciones ENDDEC

    $default  reduce usando la regla 3 ($@2)

    $@2  ir al estado 8


estado 6

    6 est_declaracion: DEFVAR . $@3 declaraciones ENDDEF

    $default  reduce usando la regla 5 ($@3)

    $@3  ir al estado 9


estado 7

    2 programa: PROGRAM $@1 est_declaracion . algoritmo

    BEGINP  desplazar e ir al estado 10

    algoritmo  ir al estado 11


estado 8

    4 est_declaracion: DECVAR $@2 . declaraciones ENDDEC

    ID  desplazar e ir al estado 12

    declaraciones  ir al estado 13
    declaracion    ir al estado 14
    lista_var      ir al estado 15


estado 9

    6 est_declaracion: DEFVAR $@3 . declaraciones ENDDEF

    ID  desplazar e ir al estado 12

    declaraciones  ir al estado 16
    declaracion    ir al estado 14
    lista_var      ir al estado 15


estado 10

   15 algoritmo: BEGINP . $@4 bloque ENDP

    $default  reduce usando la regla 14 ($@4)

    $@4  ir al estado 17


estado 11

    2 programa: PROGRAM $@1 est_declaracion algoritmo .

    $default  reduce usando la regla 2 (programa)


estado 12

   12 lista_var: ID .

    $default  reduce usando la regla 12 (lista_var)


estado 13

    4 est_declaracion: DECVAR $@2 declaraciones . ENDDEC
    8 declaraciones: declaraciones . declaracion

    ENDDEC  desplazar e ir al estado 18
    ID      desplazar e ir al estado 12

    declaracion  ir al estado 19
    lista_var    ir al estado 15


estado 14

    7 declaraciones: declaracion .

    $default  reduce usando la regla 7 (declaraciones)


estado 15

    9 declaracion: lista_var . OP_DOSP REAL
   10            | lista_var . OP_DOSP STRING
   11            | lista_var . OP_DOSP INTEGER
   13 lista_var: lista_var . CAR_COMA ID

    OP_DOSP   desplazar e ir al estado 20
    CAR_COMA  desplazar e ir al estado 21


estado 16

    6 est_declaracion: DEFVAR $@3 declaraciones . ENDDEF
    8 declaraciones: declaraciones . declaracion

    ENDDEF  desplazar e ir al estado 22
    ID      desplazar e ir al estado 12

    declaracion  ir al estado 19
    lista_var    ir al estado 15


estado 17

   15 algoritmo: BEGINP $@4 . bloque ENDP

    IF       desplazar e ir al estado 23
    WHILE    desplazar e ir al estado 24
    REPEAT   desplazar e ir al estado 25
    ID       desplazar e ir al estado 26
    BETWEEN  desplazar e ir al estado 27
    WRITE    desplazar e ir al estado 28
    READ     desplazar e ir al estado 29

    bloque          ir al estado 30
    sentencia       ir al estado 31
    ciclo           ir al estado 32
    asignacion      ir al estado 33
    lista_id        ir al estado 34
    entrada_salida  ir al estado 35
    seleccion       ir al estado 36
    between         ir al estado 37


estado 18

    4 est_declaracion: DECVAR $@2 declaraciones ENDDEC .

    $default  reduce usando la regla 4 (est_declaracion)


estado 19

    8 declaraciones: declaraciones declaracion .

    $default  reduce usando la regla 8 (declaraciones)


estado 20

    9 declaracion: lista_var OP_DOSP . REAL
   10            | lista_var OP_DOSP . STRING
   11            | lista_var OP_DOSP . INTEGER

    REAL     desplazar e ir al estado 38
    INTEGER  desplazar e ir al estado 39
    STRING   desplazar e ir al estado 40


estado 21

   13 lista_var: lista_var CAR_COMA . ID

    ID  desplazar e ir al estado 41


estado 22

    6 est_declaracion: DEFVAR $@3 declaraciones ENDDEF .

    $default  reduce usando la regla 6 (est_declaracion)


estado 23

   36 seleccion: IF . CAR_PA condicion CAR_PC THEN bloque ENDIF
   37          | IF . CAR_PA condicion CAR_PC THEN bloque ELSE bloque ENDIF

    CAR_PA  desplazar e ir al estado 42


estado 24

   26 ciclo: WHILE . $@6 CAR_PA condicion CAR_PC bloque ENDW

    $default  reduce usando la regla 25 ($@6)

    $@6  ir al estado 43


estado 25

   24 ciclo: REPEAT . $@5 bloque UNTIL condicion

    $default  reduce usando la regla 23 ($@5)

    $@5  ir al estado 44


estado 26

   29 lista_id: ID .

    $default  reduce usando la regla 29 (lista_id)


estado 27

   44 between: BETWEEN . CAR_PA ID CAR_COMA CAR_CA expresion CAR_PYC expresion CAR_CC CAR_PC

    CAR_PA  desplazar e ir al estado 45


estado 28

   33 entrada_salida: WRITE . $@8 ID
   35               | WRITE . $@9 CONST_STR

    CONST_STR  reduce usando la regla 34 ($@9)
    $default   reduce usando la regla 32 ($@8)

    $@8  ir al estado 46
    $@9  ir al estado 47


estado 29

   31 entrada_salida: READ . $@7 ID

    $default  reduce usando la regla 30 ($@7)

    $@7  ir al estado 48


estado 30

   15 algoritmo: BEGINP $@4 bloque . ENDP
   17 bloque: bloque . sentencia

    ENDP     desplazar e ir al estado 49
    IF       desplazar e ir al estado 23
    WHILE    desplazar e ir al estado 24
    REPEAT   desplazar e ir al estado 25
    ID       desplazar e ir al estado 26
    BETWEEN  desplazar e ir al estado 27
    WRITE    desplazar e ir al estado 28
    READ     desplazar e ir al estado 29

    sentencia       ir al estado 50
    ciclo           ir al estado 32
    asignacion      ir al estado 33
    lista_id        ir al estado 34
    entrada_salida  ir al estado 35
    seleccion       ir al estado 36
    between         ir al estado 37


estado 31

   16 bloque: sentencia .

    $default  reduce usando la regla 16 (bloque)


estado 32

   18 sentencia: ciclo .

    $default  reduce usando la regla 18 (sentencia)


estado 33

   20 sentencia: asignacion .

    $default  reduce usando la regla 20 (sentencia)


estado 34

   27 asignacion: lista_id . OP_ASIG expresion
   28 lista_id: lista_id . OP_ASIG ID

    OP_ASIG  desplazar e ir al estado 51


estado 35

   21 sentencia: entrada_salida .

    $default  reduce usando la regla 21 (sentencia)


estado 36

   19 sentencia: seleccion .

    $default  reduce usando la regla 19 (sentencia)


estado 37

   22 sentencia: between .

    $default  reduce usando la regla 22 (sentencia)


estado 38

    9 declaracion: lista_var OP_DOSP REAL .

    $default  reduce usando la regla 9 (declaracion)


estado 39

   11 declaracion: lista_var OP_DOSP INTEGER .

    $default  reduce usando la regla 11 (declaracion)


estado 40

   10 declaracion: lista_var OP_DOSP STRING .

    $default  reduce usando la regla 10 (declaracion)


estado 41

   13 lista_var: lista_var CAR_COMA ID .

    $default  reduce usando la regla 13 (lista_var)


estado 42

   36 seleccion: IF CAR_PA . condicion CAR_PC THEN bloque ENDIF
   37          | IF CAR_PA . condicion CAR_PC THEN bloque ELSE bloque ENDIF

    CONST_INT   desplazar e ir al estado 52
    CONST_REAL  desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    ID          desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 56

    condicion    ir al estado 57
    comparacion  ir al estado 58
    expresion    ir al estado 59
    termino      ir al estado 60
    factor       ir al estado 61


estado 43

   26 ciclo: WHILE $@6 . CAR_PA condicion CAR_PC bloque ENDW

    CAR_PA  desplazar e ir al estado 62


estado 44

   24 ciclo: REPEAT $@5 . bloque UNTIL condicion

    IF       desplazar e ir al estado 23
    WHILE    desplazar e ir al estado 24
    REPEAT   desplazar e ir al estado 25
    ID       desplazar e ir al estado 26
    BETWEEN  desplazar e ir al estado 27
    WRITE    desplazar e ir al estado 28
    READ     desplazar e ir al estado 29

    bloque          ir al estado 63
    sentencia       ir al estado 31
    ciclo           ir al estado 32
    asignacion      ir al estado 33
    lista_id        ir al estado 34
    entrada_salida  ir al estado 35
    seleccion       ir al estado 36
    between         ir al estado 37


estado 45

   44 between: BETWEEN CAR_PA . ID CAR_COMA CAR_CA expresion CAR_PYC expresion CAR_CC CAR_PC

    ID  desplazar e ir al estado 64


estado 46

   33 entrada_salida: WRITE $@8 . ID

    ID  desplazar e ir al estado 65


estado 47

   35 entrada_salida: WRITE $@9 . CONST_STR

    CONST_STR  desplazar e ir al estado 66


estado 48

   31 entrada_salida: READ $@7 . ID

    ID  desplazar e ir al estado 67


estado 49

   15 algoritmo: BEGINP $@4 bloque ENDP .

    $default  reduce usando la regla 15 (algoritmo)


estado 50

   17 bloque: bloque sentencia .

    $default  reduce usando la regla 17 (bloque)


estado 51

   27 asignacion: lista_id OP_ASIG . expresion
   28 lista_id: lista_id OP_ASIG . ID

    CONST_INT   desplazar e ir al estado 52
    CONST_REAL  desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    ID          desplazar e ir al estado 68
    CAR_PA      desplazar e ir al estado 56

    expresion  ir al estado 69
    termino    ir al estado 60
    factor     ir al estado 61


estado 52

   48 factor: CONST_INT .

    $default  reduce usando la regla 48 (factor)


estado 53

   49 factor: CONST_REAL .

    $default  reduce usando la regla 49 (factor)


estado 54

   50 factor: CONST_STR .

    $default  reduce usando la regla 50 (factor)


estado 55

   47 factor: ID .

    $default  reduce usando la regla 47 (factor)


estado 56

   51 factor: CAR_PA . expresion CAR_PC

    CONST_INT   desplazar e ir al estado 52
    CONST_REAL  desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    ID          desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 56

    expresion  ir al estado 70
    termino    ir al estado 60
    factor     ir al estado 61


estado 57

   36 seleccion: IF CAR_PA condicion . CAR_PC THEN bloque ENDIF
   37          | IF CAR_PA condicion . CAR_PC THEN bloque ELSE bloque ENDIF

    CAR_PC  desplazar e ir al estado 71


estado 58

   38 condicion: comparacion .
   39          | comparacion . OP_AND comparacion
   40          | comparacion . OP_OR comparacion

    OP_AND  desplazar e ir al estado 72
    OP_OR   desplazar e ir al estado 73

    $default  reduce usando la regla 38 (condicion)


estado 59

   41 comparacion: expresion . OP_COMPARACION expresion
   43 expresion: expresion . OP_SURES termino

    OP_COMPARACION  desplazar e ir al estado 74
    OP_SURES        desplazar e ir al estado 75


estado 60

   42 expresion: termino .
   46 termino: termino . OP_MULTDIV factor

    OP_MULTDIV  desplazar e ir al estado 76

    $default  reduce usando la regla 42 (expresion)


estado 61

   45 termino: factor .

    $default  reduce usando la regla 45 (termino)


estado 62

   26 ciclo: WHILE $@6 CAR_PA . condicion CAR_PC bloque ENDW

    CONST_INT   desplazar e ir al estado 52
    CONST_REAL  desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    ID          desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 56

    condicion    ir al estado 77
    comparacion  ir al estado 58
    expresion    ir al estado 59
    termino      ir al estado 60
    factor       ir al estado 61


estado 63

   17 bloque: bloque . sentencia
   24 ciclo: REPEAT $@5 bloque . UNTIL condicion

    IF       desplazar e ir al estado 23
    WHILE    desplazar e ir al estado 24
    REPEAT   desplazar e ir al estado 25
    UNTIL    desplazar e ir al estado 78
    ID       desplazar e ir al estado 26
    BETWEEN  desplazar e ir al estado 27
    WRITE    desplazar e ir al estado 28
    READ     desplazar e ir al estado 29

    sentencia       ir al estado 50
    ciclo           ir al estado 32
    asignacion      ir al estado 33
    lista_id        ir al estado 34
    entrada_salida  ir al estado 35
    seleccion       ir al estado 36
    between         ir al estado 37


estado 64

   44 between: BETWEEN CAR_PA ID . CAR_COMA CAR_CA expresion CAR_PYC expresion CAR_CC CAR_PC

    CAR_COMA  desplazar e ir al estado 79


estado 65

   33 entrada_salida: WRITE $@8 ID .

    $default  reduce usando la regla 33 (entrada_salida)


estado 66

   35 entrada_salida: WRITE $@9 CONST_STR .

    $default  reduce usando la regla 35 (entrada_salida)


estado 67

   31 entrada_salida: READ $@7 ID .

    $default  reduce usando la regla 31 (entrada_salida)


estado 68

   28 lista_id: lista_id OP_ASIG ID .
   47 factor: ID .

    OP_ASIG   reduce usando la regla 28 (lista_id)
    $default  reduce usando la regla 47 (factor)


estado 69

   27 asignacion: lista_id OP_ASIG expresion .
   43 expresion: expresion . OP_SURES termino

    OP_SURES  desplazar e ir al estado 75

    $default  reduce usando la regla 27 (asignacion)


estado 70

   43 expresion: expresion . OP_SURES termino
   51 factor: CAR_PA expresion . CAR_PC

    OP_SURES  desplazar e ir al estado 75
    CAR_PC    desplazar e ir al estado 80


estado 71

   36 seleccion: IF CAR_PA condicion CAR_PC . THEN bloque ENDIF
   37          | IF CAR_PA condicion CAR_PC . THEN bloque ELSE bloque ENDIF

    THEN  desplazar e ir al estado 81


estado 72

   39 condicion: comparacion OP_AND . comparacion

    CONST_INT   desplazar e ir al estado 52
    CONST_REAL  desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    ID          desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 56

    comparacion  ir al estado 82
    expresion    ir al estado 59
    termino      ir al estado 60
    factor       ir al estado 61


estado 73

   40 condicion: comparacion OP_OR . comparacion

    CONST_INT   desplazar e ir al estado 52
    CONST_REAL  desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    ID          desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 56

    comparacion  ir al estado 83
    expresion    ir al estado 59
    termino      ir al estado 60
    factor       ir al estado 61


estado 74

   41 comparacion: expresion OP_COMPARACION . expresion

    CONST_INT   desplazar e ir al estado 52
    CONST_REAL  desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    ID          desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 56

    expresion  ir al estado 84
    termino    ir al estado 60
    factor     ir al estado 61


estado 75

   43 expresion: expresion OP_SURES . termino

    CONST_INT   desplazar e ir al estado 52
    CONST_REAL  desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    ID          desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 56

    termino  ir al estado 85
    factor   ir al estado 61


estado 76

   46 termino: termino OP_MULTDIV . factor

    CONST_INT   desplazar e ir al estado 52
    CONST_REAL  desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    ID          desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 56

    factor  ir al estado 86


estado 77

   26 ciclo: WHILE $@6 CAR_PA condicion . CAR_PC bloque ENDW

    CAR_PC  desplazar e ir al estado 87


estado 78

   24 ciclo: REPEAT $@5 bloque UNTIL . condicion

    CONST_INT   desplazar e ir al estado 52
    CONST_REAL  desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    ID          desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 56

    condicion    ir al estado 88
    comparacion  ir al estado 58
    expresion    ir al estado 59
    termino      ir al estado 60
    factor       ir al estado 61


estado 79

   44 between: BETWEEN CAR_PA ID CAR_COMA . CAR_CA expresion CAR_PYC expresion CAR_CC CAR_PC

    CAR_CA  desplazar e ir al estado 89


estado 80

   51 factor: CAR_PA expresion CAR_PC .

    $default  reduce usando la regla 51 (factor)


estado 81

   36 seleccion: IF CAR_PA condicion CAR_PC THEN . bloque ENDIF
   37          | IF CAR_PA condicion CAR_PC THEN . bloque ELSE bloque ENDIF

    IF       desplazar e ir al estado 23
    WHILE    desplazar e ir al estado 24
    REPEAT   desplazar e ir al estado 25
    ID       desplazar e ir al estado 26
    BETWEEN  desplazar e ir al estado 27
    WRITE    desplazar e ir al estado 28
    READ     desplazar e ir al estado 29

    bloque          ir al estado 90
    sentencia       ir al estado 31
    ciclo           ir al estado 32
    asignacion      ir al estado 33
    lista_id        ir al estado 34
    entrada_salida  ir al estado 35
    seleccion       ir al estado 36
    between         ir al estado 37


estado 82

   39 condicion: comparacion OP_AND comparacion .

    $default  reduce usando la regla 39 (condicion)


estado 83

   40 condicion: comparacion OP_OR comparacion .

    $default  reduce usando la regla 40 (condicion)


estado 84

   41 comparacion: expresion OP_COMPARACION expresion .
   43 expresion: expresion . OP_SURES termino

    OP_SURES  desplazar e ir al estado 75

    $default  reduce usando la regla 41 (comparacion)


estado 85

   43 expresion: expresion OP_SURES termino .
   46 termino: termino . OP_MULTDIV factor

    OP_MULTDIV  desplazar e ir al estado 76

    $default  reduce usando la regla 43 (expresion)


estado 86

   46 termino: termino OP_MULTDIV factor .

    $default  reduce usando la regla 46 (termino)


estado 87

   26 ciclo: WHILE $@6 CAR_PA condicion CAR_PC . bloque ENDW

    IF       desplazar e ir al estado 23
    WHILE    desplazar e ir al estado 24
    REPEAT   desplazar e ir al estado 25
    ID       desplazar e ir al estado 26
    BETWEEN  desplazar e ir al estado 27
    WRITE    desplazar e ir al estado 28
    READ     desplazar e ir al estado 29

    bloque          ir al estado 91
    sentencia       ir al estado 31
    ciclo           ir al estado 32
    asignacion      ir al estado 33
    lista_id        ir al estado 34
    entrada_salida  ir al estado 35
    seleccion       ir al estado 36
    between         ir al estado 37


estado 88

   24 ciclo: REPEAT $@5 bloque UNTIL condicion .

    $default  reduce usando la regla 24 (ciclo)


estado 89

   44 between: BETWEEN CAR_PA ID CAR_COMA CAR_CA . expresion CAR_PYC expresion CAR_CC CAR_PC

    CONST_INT   desplazar e ir al estado 52
    CONST_REAL  desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    ID          desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 56

    expresion  ir al estado 92
    termino    ir al estado 60
    factor     ir al estado 61


estado 90

   17 bloque: bloque . sentencia
   36 seleccion: IF CAR_PA condicion CAR_PC THEN bloque . ENDIF
   37          | IF CAR_PA condicion CAR_PC THEN bloque . ELSE bloque ENDIF

    IF       desplazar e ir al estado 23
    ELSE     desplazar e ir al estado 93
    ENDIF    desplazar e ir al estado 94
    WHILE    desplazar e ir al estado 24
    REPEAT   desplazar e ir al estado 25
    ID       desplazar e ir al estado 26
    BETWEEN  desplazar e ir al estado 27
    WRITE    desplazar e ir al estado 28
    READ     desplazar e ir al estado 29

    sentencia       ir al estado 50
    ciclo           ir al estado 32
    asignacion      ir al estado 33
    lista_id        ir al estado 34
    entrada_salida  ir al estado 35
    seleccion       ir al estado 36
    between         ir al estado 37


estado 91

   17 bloque: bloque . sentencia
   26 ciclo: WHILE $@6 CAR_PA condicion CAR_PC bloque . ENDW

    IF       desplazar e ir al estado 23
    WHILE    desplazar e ir al estado 24
    ENDW     desplazar e ir al estado 95
    REPEAT   desplazar e ir al estado 25
    ID       desplazar e ir al estado 26
    BETWEEN  desplazar e ir al estado 27
    WRITE    desplazar e ir al estado 28
    READ     desplazar e ir al estado 29

    sentencia       ir al estado 50
    ciclo           ir al estado 32
    asignacion      ir al estado 33
    lista_id        ir al estado 34
    entrada_salida  ir al estado 35
    seleccion       ir al estado 36
    between         ir al estado 37


estado 92

   43 expresion: expresion . OP_SURES termino
   44 between: BETWEEN CAR_PA ID CAR_COMA CAR_CA expresion . CAR_PYC expresion CAR_CC CAR_PC

    OP_SURES  desplazar e ir al estado 75
    CAR_PYC   desplazar e ir al estado 96


estado 93

   37 seleccion: IF CAR_PA condicion CAR_PC THEN bloque ELSE . bloque ENDIF

    IF       desplazar e ir al estado 23
    WHILE    desplazar e ir al estado 24
    REPEAT   desplazar e ir al estado 25
    ID       desplazar e ir al estado 26
    BETWEEN  desplazar e ir al estado 27
    WRITE    desplazar e ir al estado 28
    READ     desplazar e ir al estado 29

    bloque          ir al estado 97
    sentencia       ir al estado 31
    ciclo           ir al estado 32
    asignacion      ir al estado 33
    lista_id        ir al estado 34
    entrada_salida  ir al estado 35
    seleccion       ir al estado 36
    between         ir al estado 37


estado 94

   36 seleccion: IF CAR_PA condicion CAR_PC THEN bloque ENDIF .

    $default  reduce usando la regla 36 (seleccion)


estado 95

   26 ciclo: WHILE $@6 CAR_PA condicion CAR_PC bloque ENDW .

    $default  reduce usando la regla 26 (ciclo)


estado 96

   44 between: BETWEEN CAR_PA ID CAR_COMA CAR_CA expresion CAR_PYC . expresion CAR_CC CAR_PC

    CONST_INT   desplazar e ir al estado 52
    CONST_REAL  desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    ID          desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 56

    expresion  ir al estado 98
    termino    ir al estado 60
    factor     ir al estado 61


estado 97

   17 bloque: bloque . sentencia
   37 seleccion: IF CAR_PA condicion CAR_PC THEN bloque ELSE bloque . ENDIF

    IF       desplazar e ir al estado 23
    ENDIF    desplazar e ir al estado 99
    WHILE    desplazar e ir al estado 24
    REPEAT   desplazar e ir al estado 25
    ID       desplazar e ir al estado 26
    BETWEEN  desplazar e ir al estado 27
    WRITE    desplazar e ir al estado 28
    READ     desplazar e ir al estado 29

    sentencia       ir al estado 50
    ciclo           ir al estado 32
    asignacion      ir al estado 33
    lista_id        ir al estado 34
    entrada_salida  ir al estado 35
    seleccion       ir al estado 36
    between         ir al estado 37


estado 98

   43 expresion: expresion . OP_SURES termino
   44 between: BETWEEN CAR_PA ID CAR_COMA CAR_CA expresion CAR_PYC expresion . CAR_CC CAR_PC

    OP_SURES  desplazar e ir al estado 75
    CAR_CC    desplazar e ir al estado 100


estado 99

   37 seleccion: IF CAR_PA condicion CAR_PC THEN bloque ELSE bloque ENDIF .

    $default  reduce usando la regla 37 (seleccion)


estado 100

   44 between: BETWEEN CAR_PA ID CAR_COMA CAR_CA expresion CAR_PYC expresion CAR_CC . CAR_PC

    CAR_PC  desplazar e ir al estado 101


estado 101

   44 between: BETWEEN CAR_PA ID CAR_COMA CAR_CA expresion CAR_PYC expresion CAR_CC CAR_PC .

    $default  reduce usando la regla 44 (between)
