Terminals unused in grammar

   FOR
   TO
   DO
   ENDFOR
   CAR_PUNTO
   LONG
   IN


Gramática

    0 $accept: programa $end

    1 $@1: /* vacío */

    2 programa: PROGRAM $@1 est_declaracion algoritmo

    3 $@2: /* vacío */

    4 est_declaracion: DECVAR $@2 declaraciones ENDDEC

    5 $@3: /* vacío */

    6 est_declaracion: DEFVAR $@3 declaraciones ENDDEF

    7 declaraciones: declaracion
    8              | declaraciones declaracion

    9 declaracion: lista_var OP_DOSP REAL
   10            | lista_var OP_DOSP STRING
   11            | lista_var OP_DOSP INTEGER

   12 lista_var: ID
   13          | lista_var CAR_COMA ID

   14 $@4: /* vacío */

   15 algoritmo: BEGINP $@4 bloque ENDP

   16 bloque: sentencia
   17       | bloque sentencia

   18 sentencia: ciclo
   19          | seleccion
   20          | asignacion
   21          | entrada_salida
   22          | between

   23 $@5: /* vacío */

   24 ciclo: REPEAT $@5 bloque UNTIL condicion

   25 $@6: /* vacío */

   26 ciclo: WHILE $@6 CAR_PA condicion CAR_PC bloque ENDW

   27 asignacion: lista_id OP_ASIG expresion

   28 lista_id: lista_id OP_ASIG ID
   29         | ID

   30 $@7: /* vacío */

   31 entrada_salida: READ $@7 ID

   32 $@8: /* vacío */

   33 entrada_salida: WRITE $@8 ID

   34 $@9: /* vacío */

   35 entrada_salida: WRITE $@9 CONST_STR

   36 seleccion: IF CAR_PA condicion CAR_PC THEN bloque ENDIF
   37          | IF CAR_PA condicion CAR_PC THEN bloque ELSE bloque ENDIF

   38 condicion: comparacion
   39          | OP_NOT comparacion
   40          | comparacion OP_AND comparacion
   41          | comparacion OP_OR comparacion
   42          | OP_NOT CAR_PA comparacion OP_AND comparacion CAR_PC
   43          | OP_NOT CAR_PA comparacion OP_OR comparacion CAR_PC
   44          | between
   45          | OP_NOT between

   46 comparacion: expresion OP_COMPARACION expresion

   47 expresion: termino
   48          | expresion OP_SUM termino
   49          | expresion OP_RES termino

   50 between: BETWEEN CAR_PA ID CAR_COMA CAR_CA expresion CAR_PYC expresion CAR_CC CAR_PC

   51 termino: factor
   52        | termino OP_MUL factor
   53        | termino OP_DIV factor

   54 factor: ID
   55       | CONST_INT
   56       | CONST_REAL
   57       | CONST_STR
   58       | CAR_PA expresion CAR_PC


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
ID (258) 12 13 28 29 31 33 50 54
CONST_INT (259) 55
CONST_STR (260) 35 57
CONST_REAL (261) 56
PROGRAM (262) 2
DECVAR (263) 4
ENDDEC (264) 4
DEFVAR (265) 6
ENDDEF (266) 6
REAL (267) 9
INTEGER (268) 11
STRING (269) 10
BEGINP (270) 15
ENDP (271) 15
IF (272) 36 37
THEN (273) 36 37
ELSE (274) 37
ENDIF (275) 36 37
FOR (276)
TO (277)
DO (278)
ENDFOR (279)
WHILE (280) 26
ENDW (281) 26
REPEAT (282) 24
UNTIL (283) 24
OP_AND (284) 40 42
OP_OR (285) 41 43
OP_NOT (286) 39 42 43 45
OP_COMPARACION (287) 46
OP_ASIG (288) 27 28
OP_DOSP (289) 9 10 11
OP_SUM (290) 48
OP_RES (291) 49
OP_MUL (292) 52
OP_DIV (293) 53
CAR_COMA (294) 13 50
CAR_PUNTO (295)
CAR_PYC (296) 50
CAR_PA (297) 26 36 37 42 43 50 58
CAR_PC (298) 26 36 37 42 43 50 58
CAR_CA (299) 50
CAR_CC (300) 50
LONG (301)
BETWEEN (302) 50
IN (303)
WRITE (304) 33 35
READ (305) 31


No terminales con las reglas donde aparecen

$accept (51)
    en la izquierda: 0
programa (52)
    en la izquierda: 2, en la derecha: 0
$@1 (53)
    en la izquierda: 1, en la derecha: 2
est_declaracion (54)
    en la izquierda: 4 6, en la derecha: 2
$@2 (55)
    en la izquierda: 3, en la derecha: 4
$@3 (56)
    en la izquierda: 5, en la derecha: 6
declaraciones (57)
    en la izquierda: 7 8, en la derecha: 4 6 8
declaracion (58)
    en la izquierda: 9 10 11, en la derecha: 7 8
lista_var (59)
    en la izquierda: 12 13, en la derecha: 9 10 11 13
algoritmo (60)
    en la izquierda: 15, en la derecha: 2
$@4 (61)
    en la izquierda: 14, en la derecha: 15
bloque (62)
    en la izquierda: 16 17, en la derecha: 15 17 24 26 36 37
sentencia (63)
    en la izquierda: 18 19 20 21 22, en la derecha: 16 17
ciclo (64)
    en la izquierda: 24 26, en la derecha: 18
$@5 (65)
    en la izquierda: 23, en la derecha: 24
$@6 (66)
    en la izquierda: 25, en la derecha: 26
asignacion (67)
    en la izquierda: 27, en la derecha: 20
lista_id (68)
    en la izquierda: 28 29, en la derecha: 27 28
entrada_salida (69)
    en la izquierda: 31 33 35, en la derecha: 21
$@7 (70)
    en la izquierda: 30, en la derecha: 31
$@8 (71)
    en la izquierda: 32, en la derecha: 33
$@9 (72)
    en la izquierda: 34, en la derecha: 35
seleccion (73)
    en la izquierda: 36 37, en la derecha: 19
condicion (74)
    en la izquierda: 38 39 40 41 42 43 44 45, en la derecha: 24 26
    36 37
comparacion (75)
    en la izquierda: 46, en la derecha: 38 39 40 41 42 43
expresion (76)
    en la izquierda: 47 48 49, en la derecha: 27 46 48 49 50 58
between (77)
    en la izquierda: 50, en la derecha: 22 44 45
termino (78)
    en la izquierda: 51 52 53, en la derecha: 47 48 49 52 53
factor (79)
    en la izquierda: 54 55 56 57 58, en la derecha: 51 52 53


estado 0

    0 $accept: . programa $end

    PROGRAM  desplazar e ir al estado 1

    programa  ir al estado 2


estado 1

    2 programa: PROGRAM . $@1 est_declaracion algoritmo

    $default  reduce usando la regla 1 ($@1)

    $@1  ir al estado 3


estado 2

    0 $accept: programa . $end

    $end  desplazar e ir al estado 4


estado 3

    2 programa: PROGRAM $@1 . est_declaracion algoritmo

    DECVAR  desplazar e ir al estado 5
    DEFVAR  desplazar e ir al estado 6

    est_declaracion  ir al estado 7


estado 4

    0 $accept: programa $end .

    $default  aceptar


estado 5

    4 est_declaracion: DECVAR . $@2 declaraciones ENDDEC

    $default  reduce usando la regla 3 ($@2)

    $@2  ir al estado 8


estado 6

    6 est_declaracion: DEFVAR . $@3 declaraciones ENDDEF

    $default  reduce usando la regla 5 ($@3)

    $@3  ir al estado 9


estado 7

    2 programa: PROGRAM $@1 est_declaracion . algoritmo

    BEGINP  desplazar e ir al estado 10

    algoritmo  ir al estado 11


estado 8

    4 est_declaracion: DECVAR $@2 . declaraciones ENDDEC

    ID  desplazar e ir al estado 12

    declaraciones  ir al estado 13
    declaracion    ir al estado 14
    lista_var      ir al estado 15


estado 9

    6 est_declaracion: DEFVAR $@3 . declaraciones ENDDEF

    ID  desplazar e ir al estado 12

    declaraciones  ir al estado 16
    declaracion    ir al estado 14
    lista_var      ir al estado 15


estado 10

   15 algoritmo: BEGINP . $@4 bloque ENDP

    $default  reduce usando la regla 14 ($@4)

    $@4  ir al estado 17


estado 11

    2 programa: PROGRAM $@1 est_declaracion algoritmo .

    $default  reduce usando la regla 2 (programa)


estado 12

   12 lista_var: ID .

    $default  reduce usando la regla 12 (lista_var)


estado 13

    4 est_declaracion: DECVAR $@2 declaraciones . ENDDEC
    8 declaraciones: declaraciones . declaracion

    ID      desplazar e ir al estado 12
    ENDDEC  desplazar e ir al estado 18

    declaracion  ir al estado 19
    lista_var    ir al estado 15


estado 14

    7 declaraciones: declaracion .

    $default  reduce usando la regla 7 (declaraciones)


estado 15

    9 declaracion: lista_var . OP_DOSP REAL
   10            | lista_var . OP_DOSP STRING
   11            | lista_var . OP_DOSP INTEGER
   13 lista_var: lista_var . CAR_COMA ID

    OP_DOSP   desplazar e ir al estado 20
    CAR_COMA  desplazar e ir al estado 21


estado 16

    6 est_declaracion: DEFVAR $@3 declaraciones . ENDDEF
    8 declaraciones: declaraciones . declaracion

    ID      desplazar e ir al estado 12
    ENDDEF  desplazar e ir al estado 22

    declaracion  ir al estado 19
    lista_var    ir al estado 15


estado 17

   15 algoritmo: BEGINP $@4 . bloque ENDP

    ID       desplazar e ir al estado 23
    IF       desplazar e ir al estado 24
    WHILE    desplazar e ir al estado 25
    REPEAT   desplazar e ir al estado 26
    BETWEEN  desplazar e ir al estado 27
    WRITE    desplazar e ir al estado 28
    READ     desplazar e ir al estado 29

    bloque          ir al estado 30
    sentencia       ir al estado 31
    ciclo           ir al estado 32
    asignacion      ir al estado 33
    lista_id        ir al estado 34
    entrada_salida  ir al estado 35
    seleccion       ir al estado 36
    between         ir al estado 37


estado 18

    4 est_declaracion: DECVAR $@2 declaraciones ENDDEC .

    $default  reduce usando la regla 4 (est_declaracion)


estado 19

    8 declaraciones: declaraciones declaracion .

    $default  reduce usando la regla 8 (declaraciones)


estado 20

    9 declaracion: lista_var OP_DOSP . REAL
   10            | lista_var OP_DOSP . STRING
   11            | lista_var OP_DOSP . INTEGER

    REAL     desplazar e ir al estado 38
    INTEGER  desplazar e ir al estado 39
    STRING   desplazar e ir al estado 40


estado 21

   13 lista_var: lista_var CAR_COMA . ID

    ID  desplazar e ir al estado 41


estado 22

    6 est_declaracion: DEFVAR $@3 declaraciones ENDDEF .

    $default  reduce usando la regla 6 (est_declaracion)


estado 23

   29 lista_id: ID .

    $default  reduce usando la regla 29 (lista_id)


estado 24

   36 seleccion: IF . CAR_PA condicion CAR_PC THEN bloque ENDIF
   37          | IF . CAR_PA condicion CAR_PC THEN bloque ELSE bloque ENDIF

    CAR_PA  desplazar e ir al estado 42


estado 25

   26 ciclo: WHILE . $@6 CAR_PA condicion CAR_PC bloque ENDW

    $default  reduce usando la regla 25 ($@6)

    $@6  ir al estado 43


estado 26

   24 ciclo: REPEAT . $@5 bloque UNTIL condicion

    $default  reduce usando la regla 23 ($@5)

    $@5  ir al estado 44


estado 27

   50 between: BETWEEN . CAR_PA ID CAR_COMA CAR_CA expresion CAR_PYC expresion CAR_CC CAR_PC

    CAR_PA  desplazar e ir al estado 45


estado 28

   33 entrada_salida: WRITE . $@8 ID
   35               | WRITE . $@9 CONST_STR

    CONST_STR  reduce usando la regla 34 ($@9)
    $default   reduce usando la regla 32 ($@8)

    $@8  ir al estado 46
    $@9  ir al estado 47


estado 29

   31 entrada_salida: READ . $@7 ID

    $default  reduce usando la regla 30 ($@7)

    $@7  ir al estado 48


estado 30

   15 algoritmo: BEGINP $@4 bloque . ENDP
   17 bloque: bloque . sentencia

    ID       desplazar e ir al estado 23
    ENDP     desplazar e ir al estado 49
    IF       desplazar e ir al estado 24
    WHILE    desplazar e ir al estado 25
    REPEAT   desplazar e ir al estado 26
    BETWEEN  desplazar e ir al estado 27
    WRITE    desplazar e ir al estado 28
    READ     desplazar e ir al estado 29

    sentencia       ir al estado 50
    ciclo           ir al estado 32
    asignacion      ir al estado 33
    lista_id        ir al estado 34
    entrada_salida  ir al estado 35
    seleccion       ir al estado 36
    between         ir al estado 37


estado 31

   16 bloque: sentencia .

    $default  reduce usando la regla 16 (bloque)


estado 32

   18 sentencia: ciclo .

    $default  reduce usando la regla 18 (sentencia)


estado 33

   20 sentencia: asignacion .

    $default  reduce usando la regla 20 (sentencia)


estado 34

   27 asignacion: lista_id . OP_ASIG expresion
   28 lista_id: lista_id . OP_ASIG ID

    OP_ASIG  desplazar e ir al estado 51


estado 35

   21 sentencia: entrada_salida .

    $default  reduce usando la regla 21 (sentencia)


estado 36

   19 sentencia: seleccion .

    $default  reduce usando la regla 19 (sentencia)


estado 37

   22 sentencia: between .

    $default  reduce usando la regla 22 (sentencia)


estado 38

    9 declaracion: lista_var OP_DOSP REAL .

    $default  reduce usando la regla 9 (declaracion)


estado 39

   11 declaracion: lista_var OP_DOSP INTEGER .

    $default  reduce usando la regla 11 (declaracion)


estado 40

   10 declaracion: lista_var OP_DOSP STRING .

    $default  reduce usando la regla 10 (declaracion)


estado 41

   13 lista_var: lista_var CAR_COMA ID .

    $default  reduce usando la regla 13 (lista_var)


estado 42

   36 seleccion: IF CAR_PA . condicion CAR_PC THEN bloque ENDIF
   37          | IF CAR_PA . condicion CAR_PC THEN bloque ELSE bloque ENDIF

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    OP_NOT      desplazar e ir al estado 56
    CAR_PA      desplazar e ir al estado 57
    BETWEEN     desplazar e ir al estado 27

    condicion    ir al estado 58
    comparacion  ir al estado 59
    expresion    ir al estado 60
    between      ir al estado 61
    termino      ir al estado 62
    factor       ir al estado 63


estado 43

   26 ciclo: WHILE $@6 . CAR_PA condicion CAR_PC bloque ENDW

    CAR_PA  desplazar e ir al estado 64


estado 44

   24 ciclo: REPEAT $@5 . bloque UNTIL condicion

    ID       desplazar e ir al estado 23
    IF       desplazar e ir al estado 24
    WHILE    desplazar e ir al estado 25
    REPEAT   desplazar e ir al estado 26
    BETWEEN  desplazar e ir al estado 27
    WRITE    desplazar e ir al estado 28
    READ     desplazar e ir al estado 29

    bloque          ir al estado 65
    sentencia       ir al estado 31
    ciclo           ir al estado 32
    asignacion      ir al estado 33
    lista_id        ir al estado 34
    entrada_salida  ir al estado 35
    seleccion       ir al estado 36
    between         ir al estado 37


estado 45

   50 between: BETWEEN CAR_PA . ID CAR_COMA CAR_CA expresion CAR_PYC expresion CAR_CC CAR_PC

    ID  desplazar e ir al estado 66


estado 46

   33 entrada_salida: WRITE $@8 . ID

    ID  desplazar e ir al estado 67


estado 47

   35 entrada_salida: WRITE $@9 . CONST_STR

    CONST_STR  desplazar e ir al estado 68


estado 48

   31 entrada_salida: READ $@7 . ID

    ID  desplazar e ir al estado 69


estado 49

   15 algoritmo: BEGINP $@4 bloque ENDP .

    $default  reduce usando la regla 15 (algoritmo)


estado 50

   17 bloque: bloque sentencia .

    $default  reduce usando la regla 17 (bloque)


estado 51

   27 asignacion: lista_id OP_ASIG . expresion
   28 lista_id: lista_id OP_ASIG . ID

    ID          desplazar e ir al estado 70
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    expresion  ir al estado 71
    termino    ir al estado 62
    factor     ir al estado 63


estado 52

   54 factor: ID .

    $default  reduce usando la regla 54 (factor)


estado 53

   55 factor: CONST_INT .

    $default  reduce usando la regla 55 (factor)


estado 54

   57 factor: CONST_STR .

    $default  reduce usando la regla 57 (factor)


estado 55

   56 factor: CONST_REAL .

    $default  reduce usando la regla 56 (factor)


estado 56

   39 condicion: OP_NOT . comparacion
   42          | OP_NOT . CAR_PA comparacion OP_AND comparacion CAR_PC
   43          | OP_NOT . CAR_PA comparacion OP_OR comparacion CAR_PC
   45          | OP_NOT . between

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 72
    BETWEEN     desplazar e ir al estado 27

    comparacion  ir al estado 73
    expresion    ir al estado 60
    between      ir al estado 74
    termino      ir al estado 62
    factor       ir al estado 63


estado 57

   58 factor: CAR_PA . expresion CAR_PC

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    expresion  ir al estado 75
    termino    ir al estado 62
    factor     ir al estado 63


estado 58

   36 seleccion: IF CAR_PA condicion . CAR_PC THEN bloque ENDIF
   37          | IF CAR_PA condicion . CAR_PC THEN bloque ELSE bloque ENDIF

    CAR_PC  desplazar e ir al estado 76


estado 59

   38 condicion: comparacion .
   40          | comparacion . OP_AND comparacion
   41          | comparacion . OP_OR comparacion

    OP_AND  desplazar e ir al estado 77
    OP_OR   desplazar e ir al estado 78

    $default  reduce usando la regla 38 (condicion)


estado 60

   46 comparacion: expresion . OP_COMPARACION expresion
   48 expresion: expresion . OP_SUM termino
   49          | expresion . OP_RES termino

    OP_COMPARACION  desplazar e ir al estado 79
    OP_SUM          desplazar e ir al estado 80
    OP_RES          desplazar e ir al estado 81


estado 61

   44 condicion: between .

    $default  reduce usando la regla 44 (condicion)


estado 62

   47 expresion: termino .
   52 termino: termino . OP_MUL factor
   53        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 82
    OP_DIV  desplazar e ir al estado 83

    $default  reduce usando la regla 47 (expresion)


estado 63

   51 termino: factor .

    $default  reduce usando la regla 51 (termino)


estado 64

   26 ciclo: WHILE $@6 CAR_PA . condicion CAR_PC bloque ENDW

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    OP_NOT      desplazar e ir al estado 56
    CAR_PA      desplazar e ir al estado 57
    BETWEEN     desplazar e ir al estado 27

    condicion    ir al estado 84
    comparacion  ir al estado 59
    expresion    ir al estado 60
    between      ir al estado 61
    termino      ir al estado 62
    factor       ir al estado 63


estado 65

   17 bloque: bloque . sentencia
   24 ciclo: REPEAT $@5 bloque . UNTIL condicion

    ID       desplazar e ir al estado 23
    IF       desplazar e ir al estado 24
    WHILE    desplazar e ir al estado 25
    REPEAT   desplazar e ir al estado 26
    UNTIL    desplazar e ir al estado 85
    BETWEEN  desplazar e ir al estado 27
    WRITE    desplazar e ir al estado 28
    READ     desplazar e ir al estado 29

    sentencia       ir al estado 50
    ciclo           ir al estado 32
    asignacion      ir al estado 33
    lista_id        ir al estado 34
    entrada_salida  ir al estado 35
    seleccion       ir al estado 36
    between         ir al estado 37


estado 66

   50 between: BETWEEN CAR_PA ID . CAR_COMA CAR_CA expresion CAR_PYC expresion CAR_CC CAR_PC

    CAR_COMA  desplazar e ir al estado 86


estado 67

   33 entrada_salida: WRITE $@8 ID .

    $default  reduce usando la regla 33 (entrada_salida)


estado 68

   35 entrada_salida: WRITE $@9 CONST_STR .

    $default  reduce usando la regla 35 (entrada_salida)


estado 69

   31 entrada_salida: READ $@7 ID .

    $default  reduce usando la regla 31 (entrada_salida)


estado 70

   28 lista_id: lista_id OP_ASIG ID .
   54 factor: ID .

    OP_ASIG   reduce usando la regla 28 (lista_id)
    $default  reduce usando la regla 54 (factor)


estado 71

   27 asignacion: lista_id OP_ASIG expresion .
   48 expresion: expresion . OP_SUM termino
   49          | expresion . OP_RES termino

    OP_SUM  desplazar e ir al estado 80
    OP_RES  desplazar e ir al estado 81

    $default  reduce usando la regla 27 (asignacion)


estado 72

   42 condicion: OP_NOT CAR_PA . comparacion OP_AND comparacion CAR_PC
   43          | OP_NOT CAR_PA . comparacion OP_OR comparacion CAR_PC
   58 factor: CAR_PA . expresion CAR_PC

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    comparacion  ir al estado 87
    expresion    ir al estado 88
    termino      ir al estado 62
    factor       ir al estado 63


estado 73

   39 condicion: OP_NOT comparacion .

    $default  reduce usando la regla 39 (condicion)


estado 74

   45 condicion: OP_NOT between .

    $default  reduce usando la regla 45 (condicion)


estado 75

   48 expresion: expresion . OP_SUM termino
   49          | expresion . OP_RES termino
   58 factor: CAR_PA expresion . CAR_PC

    OP_SUM  desplazar e ir al estado 80
    OP_RES  desplazar e ir al estado 81
    CAR_PC  desplazar e ir al estado 89


estado 76

   36 seleccion: IF CAR_PA condicion CAR_PC . THEN bloque ENDIF
   37          | IF CAR_PA condicion CAR_PC . THEN bloque ELSE bloque ENDIF

    THEN  desplazar e ir al estado 90


estado 77

   40 condicion: comparacion OP_AND . comparacion

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    comparacion  ir al estado 91
    expresion    ir al estado 60
    termino      ir al estado 62
    factor       ir al estado 63


estado 78

   41 condicion: comparacion OP_OR . comparacion

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    comparacion  ir al estado 92
    expresion    ir al estado 60
    termino      ir al estado 62
    factor       ir al estado 63


estado 79

   46 comparacion: expresion OP_COMPARACION . expresion

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    expresion  ir al estado 93
    termino    ir al estado 62
    factor     ir al estado 63


estado 80

   48 expresion: expresion OP_SUM . termino

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    termino  ir al estado 94
    factor   ir al estado 63


estado 81

   49 expresion: expresion OP_RES . termino

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    termino  ir al estado 95
    factor   ir al estado 63


estado 82

   52 termino: termino OP_MUL . factor

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    factor  ir al estado 96


estado 83

   53 termino: termino OP_DIV . factor

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    factor  ir al estado 97


estado 84

   26 ciclo: WHILE $@6 CAR_PA condicion . CAR_PC bloque ENDW

    CAR_PC  desplazar e ir al estado 98


estado 85

   24 ciclo: REPEAT $@5 bloque UNTIL . condicion

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    OP_NOT      desplazar e ir al estado 56
    CAR_PA      desplazar e ir al estado 57
    BETWEEN     desplazar e ir al estado 27

    condicion    ir al estado 99
    comparacion  ir al estado 59
    expresion    ir al estado 60
    between      ir al estado 61
    termino      ir al estado 62
    factor       ir al estado 63


estado 86

   50 between: BETWEEN CAR_PA ID CAR_COMA . CAR_CA expresion CAR_PYC expresion CAR_CC CAR_PC

    CAR_CA  desplazar e ir al estado 100


estado 87

   42 condicion: OP_NOT CAR_PA comparacion . OP_AND comparacion CAR_PC
   43          | OP_NOT CAR_PA comparacion . OP_OR comparacion CAR_PC

    OP_AND  desplazar e ir al estado 101
    OP_OR   desplazar e ir al estado 102


estado 88

   46 comparacion: expresion . OP_COMPARACION expresion
   48 expresion: expresion . OP_SUM termino
   49          | expresion . OP_RES termino
   58 factor: CAR_PA expresion . CAR_PC

    OP_COMPARACION  desplazar e ir al estado 79
    OP_SUM          desplazar e ir al estado 80
    OP_RES          desplazar e ir al estado 81
    CAR_PC          desplazar e ir al estado 89


estado 89

   58 factor: CAR_PA expresion CAR_PC .

    $default  reduce usando la regla 58 (factor)


estado 90

   36 seleccion: IF CAR_PA condicion CAR_PC THEN . bloque ENDIF
   37          | IF CAR_PA condicion CAR_PC THEN . bloque ELSE bloque ENDIF

    ID       desplazar e ir al estado 23
    IF       desplazar e ir al estado 24
    WHILE    desplazar e ir al estado 25
    REPEAT   desplazar e ir al estado 26
    BETWEEN  desplazar e ir al estado 27
    WRITE    desplazar e ir al estado 28
    READ     desplazar e ir al estado 29

    bloque          ir al estado 103
    sentencia       ir al estado 31
    ciclo           ir al estado 32
    asignacion      ir al estado 33
    lista_id        ir al estado 34
    entrada_salida  ir al estado 35
    seleccion       ir al estado 36
    between         ir al estado 37


estado 91

   40 condicion: comparacion OP_AND comparacion .

    $default  reduce usando la regla 40 (condicion)


estado 92

   41 condicion: comparacion OP_OR comparacion .

    $default  reduce usando la regla 41 (condicion)


estado 93

   46 comparacion: expresion OP_COMPARACION expresion .
   48 expresion: expresion . OP_SUM termino
   49          | expresion . OP_RES termino

    OP_SUM  desplazar e ir al estado 80
    OP_RES  desplazar e ir al estado 81

    $default  reduce usando la regla 46 (comparacion)


estado 94

   48 expresion: expresion OP_SUM termino .
   52 termino: termino . OP_MUL factor
   53        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 82
    OP_DIV  desplazar e ir al estado 83

    $default  reduce usando la regla 48 (expresion)


estado 95

   49 expresion: expresion OP_RES termino .
   52 termino: termino . OP_MUL factor
   53        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 82
    OP_DIV  desplazar e ir al estado 83

    $default  reduce usando la regla 49 (expresion)


estado 96

   52 termino: termino OP_MUL factor .

    $default  reduce usando la regla 52 (termino)


estado 97

   53 termino: termino OP_DIV factor .

    $default  reduce usando la regla 53 (termino)


estado 98

   26 ciclo: WHILE $@6 CAR_PA condicion CAR_PC . bloque ENDW

    ID       desplazar e ir al estado 23
    IF       desplazar e ir al estado 24
    WHILE    desplazar e ir al estado 25
    REPEAT   desplazar e ir al estado 26
    BETWEEN  desplazar e ir al estado 27
    WRITE    desplazar e ir al estado 28
    READ     desplazar e ir al estado 29

    bloque          ir al estado 104
    sentencia       ir al estado 31
    ciclo           ir al estado 32
    asignacion      ir al estado 33
    lista_id        ir al estado 34
    entrada_salida  ir al estado 35
    seleccion       ir al estado 36
    between         ir al estado 37


estado 99

   24 ciclo: REPEAT $@5 bloque UNTIL condicion .

    $default  reduce usando la regla 24 (ciclo)


estado 100

   50 between: BETWEEN CAR_PA ID CAR_COMA CAR_CA . expresion CAR_PYC expresion CAR_CC CAR_PC

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    expresion  ir al estado 105
    termino    ir al estado 62
    factor     ir al estado 63


estado 101

   42 condicion: OP_NOT CAR_PA comparacion OP_AND . comparacion CAR_PC

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    comparacion  ir al estado 106
    expresion    ir al estado 60
    termino      ir al estado 62
    factor       ir al estado 63


estado 102

   43 condicion: OP_NOT CAR_PA comparacion OP_OR . comparacion CAR_PC

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    comparacion  ir al estado 107
    expresion    ir al estado 60
    termino      ir al estado 62
    factor       ir al estado 63


estado 103

   17 bloque: bloque . sentencia
   36 seleccion: IF CAR_PA condicion CAR_PC THEN bloque . ENDIF
   37          | IF CAR_PA condicion CAR_PC THEN bloque . ELSE bloque ENDIF

    ID       desplazar e ir al estado 23
    IF       desplazar e ir al estado 24
    ELSE     desplazar e ir al estado 108
    ENDIF    desplazar e ir al estado 109
    WHILE    desplazar e ir al estado 25
    REPEAT   desplazar e ir al estado 26
    BETWEEN  desplazar e ir al estado 27
    WRITE    desplazar e ir al estado 28
    READ     desplazar e ir al estado 29

    sentencia       ir al estado 50
    ciclo           ir al estado 32
    asignacion      ir al estado 33
    lista_id        ir al estado 34
    entrada_salida  ir al estado 35
    seleccion       ir al estado 36
    between         ir al estado 37


estado 104

   17 bloque: bloque . sentencia
   26 ciclo: WHILE $@6 CAR_PA condicion CAR_PC bloque . ENDW

    ID       desplazar e ir al estado 23
    IF       desplazar e ir al estado 24
    WHILE    desplazar e ir al estado 25
    ENDW     desplazar e ir al estado 110
    REPEAT   desplazar e ir al estado 26
    BETWEEN  desplazar e ir al estado 27
    WRITE    desplazar e ir al estado 28
    READ     desplazar e ir al estado 29

    sentencia       ir al estado 50
    ciclo           ir al estado 32
    asignacion      ir al estado 33
    lista_id        ir al estado 34
    entrada_salida  ir al estado 35
    seleccion       ir al estado 36
    between         ir al estado 37


estado 105

   48 expresion: expresion . OP_SUM termino
   49          | expresion . OP_RES termino
   50 between: BETWEEN CAR_PA ID CAR_COMA CAR_CA expresion . CAR_PYC expresion CAR_CC CAR_PC

    OP_SUM   desplazar e ir al estado 80
    OP_RES   desplazar e ir al estado 81
    CAR_PYC  desplazar e ir al estado 111


estado 106

   42 condicion: OP_NOT CAR_PA comparacion OP_AND comparacion . CAR_PC

    CAR_PC  desplazar e ir al estado 112


estado 107

   43 condicion: OP_NOT CAR_PA comparacion OP_OR comparacion . CAR_PC

    CAR_PC  desplazar e ir al estado 113


estado 108

   37 seleccion: IF CAR_PA condicion CAR_PC THEN bloque ELSE . bloque ENDIF

    ID       desplazar e ir al estado 23
    IF       desplazar e ir al estado 24
    WHILE    desplazar e ir al estado 25
    REPEAT   desplazar e ir al estado 26
    BETWEEN  desplazar e ir al estado 27
    WRITE    desplazar e ir al estado 28
    READ     desplazar e ir al estado 29

    bloque          ir al estado 114
    sentencia       ir al estado 31
    ciclo           ir al estado 32
    asignacion      ir al estado 33
    lista_id        ir al estado 34
    entrada_salida  ir al estado 35
    seleccion       ir al estado 36
    between         ir al estado 37


estado 109

   36 seleccion: IF CAR_PA condicion CAR_PC THEN bloque ENDIF .

    $default  reduce usando la regla 36 (seleccion)


estado 110

   26 ciclo: WHILE $@6 CAR_PA condicion CAR_PC bloque ENDW .

    $default  reduce usando la regla 26 (ciclo)


estado 111

   50 between: BETWEEN CAR_PA ID CAR_COMA CAR_CA expresion CAR_PYC . expresion CAR_CC CAR_PC

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    expresion  ir al estado 115
    termino    ir al estado 62
    factor     ir al estado 63


estado 112

   42 condicion: OP_NOT CAR_PA comparacion OP_AND comparacion CAR_PC .

    $default  reduce usando la regla 42 (condicion)


estado 113

   43 condicion: OP_NOT CAR_PA comparacion OP_OR comparacion CAR_PC .

    $default  reduce usando la regla 43 (condicion)


estado 114

   17 bloque: bloque . sentencia
   37 seleccion: IF CAR_PA condicion CAR_PC THEN bloque ELSE bloque . ENDIF

    ID       desplazar e ir al estado 23
    IF       desplazar e ir al estado 24
    ENDIF    desplazar e ir al estado 116
    WHILE    desplazar e ir al estado 25
    REPEAT   desplazar e ir al estado 26
    BETWEEN  desplazar e ir al estado 27
    WRITE    desplazar e ir al estado 28
    READ     desplazar e ir al estado 29

    sentencia       ir al estado 50
    ciclo           ir al estado 32
    asignacion      ir al estado 33
    lista_id        ir al estado 34
    entrada_salida  ir al estado 35
    seleccion       ir al estado 36
    between         ir al estado 37


estado 115

   48 expresion: expresion . OP_SUM termino
   49          | expresion . OP_RES termino
   50 between: BETWEEN CAR_PA ID CAR_COMA CAR_CA expresion CAR_PYC expresion . CAR_CC CAR_PC

    OP_SUM  desplazar e ir al estado 80
    OP_RES  desplazar e ir al estado 81
    CAR_CC  desplazar e ir al estado 117


estado 116

   37 seleccion: IF CAR_PA condicion CAR_PC THEN bloque ELSE bloque ENDIF .

    $default  reduce usando la regla 37 (seleccion)


estado 117

   50 between: BETWEEN CAR_PA ID CAR_COMA CAR_CA expresion CAR_PYC expresion CAR_CC . CAR_PC

    CAR_PC  desplazar e ir al estado 118


estado 118

   50 between: BETWEEN CAR_PA ID CAR_COMA CAR_CA expresion CAR_PYC expresion CAR_CC CAR_PC .

    $default  reduce usando la regla 50 (between)
