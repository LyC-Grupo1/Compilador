Terminals unused in grammar

   FOR
   TO
   DO
   ENDFOR
   CAR_PUNTO
   LONG
   IN


Gramática

    0 $accept: programa $end

    1 $@1: /* vacío */

    2 programa: PROGRAM $@1 est_declaracion algoritmo

    3 $@2: /* vacío */

    4 est_declaracion: DECVAR $@2 declaraciones ENDDEC

    5 $@3: /* vacío */

    6 est_declaracion: DEFVAR $@3 declaraciones ENDDEF

    7 declaraciones: declaracion
    8              | declaraciones declaracion

    9 declaracion: lista_var OP_DOSP REAL
   10            | lista_var OP_DOSP STRING
   11            | lista_var OP_DOSP INTEGER

   12 lista_var: ID
   13          | lista_var CAR_COMA ID

   14 $@4: /* vacío */

   15 algoritmo: BEGINP $@4 bloque ENDP

   16 bloque: bloque sentencia
   17       | sentencia

   18 sentencia: ciclo
   19          | seleccion
   20          | asignacion
   21          | entrada_salida
   22          | between

   23 $@5: /* vacío */

   24 ciclo: REPEAT $@5 bloque UNTIL condicion

   25 $@6: /* vacío */

   26 ciclo: WHILE $@6 CAR_PA condicion CAR_PC bloque endw_

   27 endw_: ENDW

   28 asignacion: lista_id OP_ASIG expresion

   29 lista_id: lista_id OP_ASIG ID
   30         | ID

   31 $@7: /* vacío */

   32 entrada_salida: READ $@7 ID

   33 $@8: /* vacío */

   34 entrada_salida: WRITE $@8 ID

   35 $@9: /* vacío */

   36 entrada_salida: WRITE $@9 CONST_STR

   37 $@10: /* vacío */

   38 seleccion: IF CAR_PA condicion CAR_PC then_ bloque $@10 ENDIF

   39 $@11: /* vacío */

   40 seleccion: IF CAR_PA condicion CAR_PC then_ bloque $@11 else_ bloque ENDIF

   41 then_: THEN

   42 else_: ELSE

   43 condicion: comparacion
   44          | OP_NOT comparacion

   45 $@12: /* vacío */

   46 condicion: comparacion op_and_ $@12 comparacion

   47 $@13: /* vacío */

   48 condicion: comparacion op_or_ $@13 comparacion
   49          | OP_NOT CAR_PA comparacion OP_AND comparacion CAR_PC
   50          | OP_NOT CAR_PA comparacion OP_OR comparacion CAR_PC
   51          | between
   52          | OP_NOT between

   53 op_and_: OP_AND

   54 op_or_: OP_OR

   55 $@14: /* vacío */

   56 comparacion: expresion OP_COMPARACION $@14 expresion

   57 expresion: expresion OP_SUM termino
   58          | expresion OP_RES termino
   59          | termino

   60 $@15: /* vacío */

   61 $@16: /* vacío */

   62 $@17: /* vacío */

   63 between: $@15 BETWEEN CAR_PA ID $@16 CAR_COMA CAR_CA expresion $@17 CAR_PYC expresion CAR_CC CAR_PC

   64 termino: termino OP_MUL factor
   65        | termino OP_DIV factor
   66        | factor

   67 factor: ID
   68       | CONST_INT
   69       | CONST_REAL
   70       | CONST_STR
   71       | CAR_PA expresion CAR_PC


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
ID (258) 12 13 29 30 32 34 63 67
CONST_INT (259) 68
CONST_STR (260) 36 70
CONST_REAL (261) 69
PROGRAM (262) 2
DECVAR (263) 4
ENDDEC (264) 4
DEFVAR (265) 6
ENDDEF (266) 6
REAL (267) 9
INTEGER (268) 11
STRING (269) 10
BEGINP (270) 15
ENDP (271) 15
IF (272) 38 40
THEN (273) 41
ELSE (274) 42
ENDIF (275) 38 40
FOR (276)
TO (277)
DO (278)
ENDFOR (279)
WHILE (280) 26
ENDW (281) 27
REPEAT (282) 24
UNTIL (283) 24
OP_AND (284) 49 53
OP_OR (285) 50 54
OP_NOT (286) 44 49 50 52
OP_COMPARACION (287) 56
OP_ASIG (288) 28 29
OP_DOSP (289) 9 10 11
OP_SUM (290) 57
OP_RES (291) 58
OP_MUL (292) 64
OP_DIV (293) 65
CAR_COMA (294) 13 63
CAR_PUNTO (295)
CAR_PYC (296) 63
CAR_PA (297) 26 38 40 49 50 63 71
CAR_PC (298) 26 38 40 49 50 63 71
CAR_CA (299) 63
CAR_CC (300) 63
LONG (301)
BETWEEN (302) 63
IN (303)
WRITE (304) 34 36
READ (305) 32


No terminales con las reglas donde aparecen

$accept (51)
    en la izquierda: 0
programa (52)
    en la izquierda: 2, en la derecha: 0
$@1 (53)
    en la izquierda: 1, en la derecha: 2
est_declaracion (54)
    en la izquierda: 4 6, en la derecha: 2
$@2 (55)
    en la izquierda: 3, en la derecha: 4
$@3 (56)
    en la izquierda: 5, en la derecha: 6
declaraciones (57)
    en la izquierda: 7 8, en la derecha: 4 6 8
declaracion (58)
    en la izquierda: 9 10 11, en la derecha: 7 8
lista_var (59)
    en la izquierda: 12 13, en la derecha: 9 10 11 13
algoritmo (60)
    en la izquierda: 15, en la derecha: 2
$@4 (61)
    en la izquierda: 14, en la derecha: 15
bloque (62)
    en la izquierda: 16 17, en la derecha: 15 16 24 26 38 40
sentencia (63)
    en la izquierda: 18 19 20 21 22, en la derecha: 16 17
ciclo (64)
    en la izquierda: 24 26, en la derecha: 18
$@5 (65)
    en la izquierda: 23, en la derecha: 24
$@6 (66)
    en la izquierda: 25, en la derecha: 26
endw_ (67)
    en la izquierda: 27, en la derecha: 26
asignacion (68)
    en la izquierda: 28, en la derecha: 20
lista_id (69)
    en la izquierda: 29 30, en la derecha: 28 29
entrada_salida (70)
    en la izquierda: 32 34 36, en la derecha: 21
$@7 (71)
    en la izquierda: 31, en la derecha: 32
$@8 (72)
    en la izquierda: 33, en la derecha: 34
$@9 (73)
    en la izquierda: 35, en la derecha: 36
seleccion (74)
    en la izquierda: 38 40, en la derecha: 19
$@10 (75)
    en la izquierda: 37, en la derecha: 38
$@11 (76)
    en la izquierda: 39, en la derecha: 40
then_ (77)
    en la izquierda: 41, en la derecha: 38 40
else_ (78)
    en la izquierda: 42, en la derecha: 40
condicion (79)
    en la izquierda: 43 44 46 48 49 50 51 52, en la derecha: 24 26
    38 40
$@12 (80)
    en la izquierda: 45, en la derecha: 46
$@13 (81)
    en la izquierda: 47, en la derecha: 48
op_and_ (82)
    en la izquierda: 53, en la derecha: 46
op_or_ (83)
    en la izquierda: 54, en la derecha: 48
comparacion (84)
    en la izquierda: 56, en la derecha: 43 44 46 48 49 50
$@14 (85)
    en la izquierda: 55, en la derecha: 56
expresion (86)
    en la izquierda: 57 58 59, en la derecha: 28 56 57 58 63 71
between (87)
    en la izquierda: 63, en la derecha: 22 51 52
$@15 (88)
    en la izquierda: 60, en la derecha: 63
$@16 (89)
    en la izquierda: 61, en la derecha: 63
$@17 (90)
    en la izquierda: 62, en la derecha: 63
termino (91)
    en la izquierda: 64 65 66, en la derecha: 57 58 59 64 65
factor (92)
    en la izquierda: 67 68 69 70 71, en la derecha: 64 65 66


estado 0

    0 $accept: . programa $end

    PROGRAM  desplazar e ir al estado 1

    programa  ir al estado 2


estado 1

    2 programa: PROGRAM . $@1 est_declaracion algoritmo

    $default  reduce usando la regla 1 ($@1)

    $@1  ir al estado 3


estado 2

    0 $accept: programa . $end

    $end  desplazar e ir al estado 4


estado 3

    2 programa: PROGRAM $@1 . est_declaracion algoritmo

    DECVAR  desplazar e ir al estado 5
    DEFVAR  desplazar e ir al estado 6

    est_declaracion  ir al estado 7


estado 4

    0 $accept: programa $end .

    $default  aceptar


estado 5

    4 est_declaracion: DECVAR . $@2 declaraciones ENDDEC

    $default  reduce usando la regla 3 ($@2)

    $@2  ir al estado 8


estado 6

    6 est_declaracion: DEFVAR . $@3 declaraciones ENDDEF

    $default  reduce usando la regla 5 ($@3)

    $@3  ir al estado 9


estado 7

    2 programa: PROGRAM $@1 est_declaracion . algoritmo

    BEGINP  desplazar e ir al estado 10

    algoritmo  ir al estado 11


estado 8

    4 est_declaracion: DECVAR $@2 . declaraciones ENDDEC

    ID  desplazar e ir al estado 12

    declaraciones  ir al estado 13
    declaracion    ir al estado 14
    lista_var      ir al estado 15


estado 9

    6 est_declaracion: DEFVAR $@3 . declaraciones ENDDEF

    ID  desplazar e ir al estado 12

    declaraciones  ir al estado 16
    declaracion    ir al estado 14
    lista_var      ir al estado 15


estado 10

   15 algoritmo: BEGINP . $@4 bloque ENDP

    $default  reduce usando la regla 14 ($@4)

    $@4  ir al estado 17


estado 11

    2 programa: PROGRAM $@1 est_declaracion algoritmo .

    $default  reduce usando la regla 2 (programa)


estado 12

   12 lista_var: ID .

    $default  reduce usando la regla 12 (lista_var)


estado 13

    4 est_declaracion: DECVAR $@2 declaraciones . ENDDEC
    8 declaraciones: declaraciones . declaracion

    ID      desplazar e ir al estado 12
    ENDDEC  desplazar e ir al estado 18

    declaracion  ir al estado 19
    lista_var    ir al estado 15


estado 14

    7 declaraciones: declaracion .

    $default  reduce usando la regla 7 (declaraciones)


estado 15

    9 declaracion: lista_var . OP_DOSP REAL
   10            | lista_var . OP_DOSP STRING
   11            | lista_var . OP_DOSP INTEGER
   13 lista_var: lista_var . CAR_COMA ID

    OP_DOSP   desplazar e ir al estado 20
    CAR_COMA  desplazar e ir al estado 21


estado 16

    6 est_declaracion: DEFVAR $@3 declaraciones . ENDDEF
    8 declaraciones: declaraciones . declaracion

    ID      desplazar e ir al estado 12
    ENDDEF  desplazar e ir al estado 22

    declaracion  ir al estado 19
    lista_var    ir al estado 15


estado 17

   15 algoritmo: BEGINP $@4 . bloque ENDP

    ID      desplazar e ir al estado 23
    IF      desplazar e ir al estado 24
    WHILE   desplazar e ir al estado 25
    REPEAT  desplazar e ir al estado 26
    WRITE   desplazar e ir al estado 27
    READ    desplazar e ir al estado 28

    $default  reduce usando la regla 60 ($@15)

    bloque          ir al estado 29
    sentencia       ir al estado 30
    ciclo           ir al estado 31
    asignacion      ir al estado 32
    lista_id        ir al estado 33
    entrada_salida  ir al estado 34
    seleccion       ir al estado 35
    between         ir al estado 36
    $@15            ir al estado 37


estado 18

    4 est_declaracion: DECVAR $@2 declaraciones ENDDEC .

    $default  reduce usando la regla 4 (est_declaracion)


estado 19

    8 declaraciones: declaraciones declaracion .

    $default  reduce usando la regla 8 (declaraciones)


estado 20

    9 declaracion: lista_var OP_DOSP . REAL
   10            | lista_var OP_DOSP . STRING
   11            | lista_var OP_DOSP . INTEGER

    REAL     desplazar e ir al estado 38
    INTEGER  desplazar e ir al estado 39
    STRING   desplazar e ir al estado 40


estado 21

   13 lista_var: lista_var CAR_COMA . ID

    ID  desplazar e ir al estado 41


estado 22

    6 est_declaracion: DEFVAR $@3 declaraciones ENDDEF .

    $default  reduce usando la regla 6 (est_declaracion)


estado 23

   30 lista_id: ID .

    $default  reduce usando la regla 30 (lista_id)


estado 24

   38 seleccion: IF . CAR_PA condicion CAR_PC then_ bloque $@10 ENDIF
   40          | IF . CAR_PA condicion CAR_PC then_ bloque $@11 else_ bloque ENDIF

    CAR_PA  desplazar e ir al estado 42


estado 25

   26 ciclo: WHILE . $@6 CAR_PA condicion CAR_PC bloque endw_

    $default  reduce usando la regla 25 ($@6)

    $@6  ir al estado 43


estado 26

   24 ciclo: REPEAT . $@5 bloque UNTIL condicion

    $default  reduce usando la regla 23 ($@5)

    $@5  ir al estado 44


estado 27

   34 entrada_salida: WRITE . $@8 ID
   36               | WRITE . $@9 CONST_STR

    CONST_STR  reduce usando la regla 35 ($@9)
    $default   reduce usando la regla 33 ($@8)

    $@8  ir al estado 45
    $@9  ir al estado 46


estado 28

   32 entrada_salida: READ . $@7 ID

    $default  reduce usando la regla 31 ($@7)

    $@7  ir al estado 47


estado 29

   15 algoritmo: BEGINP $@4 bloque . ENDP
   16 bloque: bloque . sentencia

    ID      desplazar e ir al estado 23
    ENDP    desplazar e ir al estado 48
    IF      desplazar e ir al estado 24
    WHILE   desplazar e ir al estado 25
    REPEAT  desplazar e ir al estado 26
    WRITE   desplazar e ir al estado 27
    READ    desplazar e ir al estado 28

    $default  reduce usando la regla 60 ($@15)

    sentencia       ir al estado 49
    ciclo           ir al estado 31
    asignacion      ir al estado 32
    lista_id        ir al estado 33
    entrada_salida  ir al estado 34
    seleccion       ir al estado 35
    between         ir al estado 36
    $@15            ir al estado 37


estado 30

   17 bloque: sentencia .

    $default  reduce usando la regla 17 (bloque)


estado 31

   18 sentencia: ciclo .

    $default  reduce usando la regla 18 (sentencia)


estado 32

   20 sentencia: asignacion .

    $default  reduce usando la regla 20 (sentencia)


estado 33

   28 asignacion: lista_id . OP_ASIG expresion
   29 lista_id: lista_id . OP_ASIG ID

    OP_ASIG  desplazar e ir al estado 50


estado 34

   21 sentencia: entrada_salida .

    $default  reduce usando la regla 21 (sentencia)


estado 35

   19 sentencia: seleccion .

    $default  reduce usando la regla 19 (sentencia)


estado 36

   22 sentencia: between .

    $default  reduce usando la regla 22 (sentencia)


estado 37

   63 between: $@15 . BETWEEN CAR_PA ID $@16 CAR_COMA CAR_CA expresion $@17 CAR_PYC expresion CAR_CC CAR_PC

    BETWEEN  desplazar e ir al estado 51


estado 38

    9 declaracion: lista_var OP_DOSP REAL .

    $default  reduce usando la regla 9 (declaracion)


estado 39

   11 declaracion: lista_var OP_DOSP INTEGER .

    $default  reduce usando la regla 11 (declaracion)


estado 40

   10 declaracion: lista_var OP_DOSP STRING .

    $default  reduce usando la regla 10 (declaracion)


estado 41

   13 lista_var: lista_var CAR_COMA ID .

    $default  reduce usando la regla 13 (lista_var)


estado 42

   38 seleccion: IF CAR_PA . condicion CAR_PC then_ bloque $@10 ENDIF
   40          | IF CAR_PA . condicion CAR_PC then_ bloque $@11 else_ bloque ENDIF

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    OP_NOT      desplazar e ir al estado 56
    CAR_PA      desplazar e ir al estado 57

    $default  reduce usando la regla 60 ($@15)

    condicion    ir al estado 58
    comparacion  ir al estado 59
    expresion    ir al estado 60
    between      ir al estado 61
    $@15         ir al estado 37
    termino      ir al estado 62
    factor       ir al estado 63


estado 43

   26 ciclo: WHILE $@6 . CAR_PA condicion CAR_PC bloque endw_

    CAR_PA  desplazar e ir al estado 64


estado 44

   24 ciclo: REPEAT $@5 . bloque UNTIL condicion

    ID      desplazar e ir al estado 23
    IF      desplazar e ir al estado 24
    WHILE   desplazar e ir al estado 25
    REPEAT  desplazar e ir al estado 26
    WRITE   desplazar e ir al estado 27
    READ    desplazar e ir al estado 28

    $default  reduce usando la regla 60 ($@15)

    bloque          ir al estado 65
    sentencia       ir al estado 30
    ciclo           ir al estado 31
    asignacion      ir al estado 32
    lista_id        ir al estado 33
    entrada_salida  ir al estado 34
    seleccion       ir al estado 35
    between         ir al estado 36
    $@15            ir al estado 37


estado 45

   34 entrada_salida: WRITE $@8 . ID

    ID  desplazar e ir al estado 66


estado 46

   36 entrada_salida: WRITE $@9 . CONST_STR

    CONST_STR  desplazar e ir al estado 67


estado 47

   32 entrada_salida: READ $@7 . ID

    ID  desplazar e ir al estado 68


estado 48

   15 algoritmo: BEGINP $@4 bloque ENDP .

    $default  reduce usando la regla 15 (algoritmo)


estado 49

   16 bloque: bloque sentencia .

    $default  reduce usando la regla 16 (bloque)


estado 50

   28 asignacion: lista_id OP_ASIG . expresion
   29 lista_id: lista_id OP_ASIG . ID

    ID          desplazar e ir al estado 69
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    expresion  ir al estado 70
    termino    ir al estado 62
    factor     ir al estado 63


estado 51

   63 between: $@15 BETWEEN . CAR_PA ID $@16 CAR_COMA CAR_CA expresion $@17 CAR_PYC expresion CAR_CC CAR_PC

    CAR_PA  desplazar e ir al estado 71


estado 52

   67 factor: ID .

    $default  reduce usando la regla 67 (factor)


estado 53

   68 factor: CONST_INT .

    $default  reduce usando la regla 68 (factor)


estado 54

   70 factor: CONST_STR .

    $default  reduce usando la regla 70 (factor)


estado 55

   69 factor: CONST_REAL .

    $default  reduce usando la regla 69 (factor)


estado 56

   44 condicion: OP_NOT . comparacion
   49          | OP_NOT . CAR_PA comparacion OP_AND comparacion CAR_PC
   50          | OP_NOT . CAR_PA comparacion OP_OR comparacion CAR_PC
   52          | OP_NOT . between

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 72

    $default  reduce usando la regla 60 ($@15)

    comparacion  ir al estado 73
    expresion    ir al estado 60
    between      ir al estado 74
    $@15         ir al estado 37
    termino      ir al estado 62
    factor       ir al estado 63


estado 57

   71 factor: CAR_PA . expresion CAR_PC

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    expresion  ir al estado 75
    termino    ir al estado 62
    factor     ir al estado 63


estado 58

   38 seleccion: IF CAR_PA condicion . CAR_PC then_ bloque $@10 ENDIF
   40          | IF CAR_PA condicion . CAR_PC then_ bloque $@11 else_ bloque ENDIF

    CAR_PC  desplazar e ir al estado 76


estado 59

   43 condicion: comparacion .
   46          | comparacion . op_and_ $@12 comparacion
   48          | comparacion . op_or_ $@13 comparacion

    OP_AND  desplazar e ir al estado 77
    OP_OR   desplazar e ir al estado 78

    $default  reduce usando la regla 43 (condicion)

    op_and_  ir al estado 79
    op_or_   ir al estado 80


estado 60

   56 comparacion: expresion . OP_COMPARACION $@14 expresion
   57 expresion: expresion . OP_SUM termino
   58          | expresion . OP_RES termino

    OP_COMPARACION  desplazar e ir al estado 81
    OP_SUM          desplazar e ir al estado 82
    OP_RES          desplazar e ir al estado 83


estado 61

   51 condicion: between .

    $default  reduce usando la regla 51 (condicion)


estado 62

   59 expresion: termino .
   64 termino: termino . OP_MUL factor
   65        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 84
    OP_DIV  desplazar e ir al estado 85

    $default  reduce usando la regla 59 (expresion)


estado 63

   66 termino: factor .

    $default  reduce usando la regla 66 (termino)


estado 64

   26 ciclo: WHILE $@6 CAR_PA . condicion CAR_PC bloque endw_

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    OP_NOT      desplazar e ir al estado 56
    CAR_PA      desplazar e ir al estado 57

    $default  reduce usando la regla 60 ($@15)

    condicion    ir al estado 86
    comparacion  ir al estado 59
    expresion    ir al estado 60
    between      ir al estado 61
    $@15         ir al estado 37
    termino      ir al estado 62
    factor       ir al estado 63


estado 65

   16 bloque: bloque . sentencia
   24 ciclo: REPEAT $@5 bloque . UNTIL condicion

    ID      desplazar e ir al estado 23
    IF      desplazar e ir al estado 24
    WHILE   desplazar e ir al estado 25
    REPEAT  desplazar e ir al estado 26
    UNTIL   desplazar e ir al estado 87
    WRITE   desplazar e ir al estado 27
    READ    desplazar e ir al estado 28

    $default  reduce usando la regla 60 ($@15)

    sentencia       ir al estado 49
    ciclo           ir al estado 31
    asignacion      ir al estado 32
    lista_id        ir al estado 33
    entrada_salida  ir al estado 34
    seleccion       ir al estado 35
    between         ir al estado 36
    $@15            ir al estado 37


estado 66

   34 entrada_salida: WRITE $@8 ID .

    $default  reduce usando la regla 34 (entrada_salida)


estado 67

   36 entrada_salida: WRITE $@9 CONST_STR .

    $default  reduce usando la regla 36 (entrada_salida)


estado 68

   32 entrada_salida: READ $@7 ID .

    $default  reduce usando la regla 32 (entrada_salida)


estado 69

   29 lista_id: lista_id OP_ASIG ID .
   67 factor: ID .

    OP_ASIG   reduce usando la regla 29 (lista_id)
    $default  reduce usando la regla 67 (factor)


estado 70

   28 asignacion: lista_id OP_ASIG expresion .
   57 expresion: expresion . OP_SUM termino
   58          | expresion . OP_RES termino

    OP_SUM  desplazar e ir al estado 82
    OP_RES  desplazar e ir al estado 83

    $default  reduce usando la regla 28 (asignacion)


estado 71

   63 between: $@15 BETWEEN CAR_PA . ID $@16 CAR_COMA CAR_CA expresion $@17 CAR_PYC expresion CAR_CC CAR_PC

    ID  desplazar e ir al estado 88


estado 72

   49 condicion: OP_NOT CAR_PA . comparacion OP_AND comparacion CAR_PC
   50          | OP_NOT CAR_PA . comparacion OP_OR comparacion CAR_PC
   71 factor: CAR_PA . expresion CAR_PC

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    comparacion  ir al estado 89
    expresion    ir al estado 90
    termino      ir al estado 62
    factor       ir al estado 63


estado 73

   44 condicion: OP_NOT comparacion .

    $default  reduce usando la regla 44 (condicion)


estado 74

   52 condicion: OP_NOT between .

    $default  reduce usando la regla 52 (condicion)


estado 75

   57 expresion: expresion . OP_SUM termino
   58          | expresion . OP_RES termino
   71 factor: CAR_PA expresion . CAR_PC

    OP_SUM  desplazar e ir al estado 82
    OP_RES  desplazar e ir al estado 83
    CAR_PC  desplazar e ir al estado 91


estado 76

   38 seleccion: IF CAR_PA condicion CAR_PC . then_ bloque $@10 ENDIF
   40          | IF CAR_PA condicion CAR_PC . then_ bloque $@11 else_ bloque ENDIF

    THEN  desplazar e ir al estado 92

    then_  ir al estado 93


estado 77

   53 op_and_: OP_AND .

    $default  reduce usando la regla 53 (op_and_)


estado 78

   54 op_or_: OP_OR .

    $default  reduce usando la regla 54 (op_or_)


estado 79

   46 condicion: comparacion op_and_ . $@12 comparacion

    $default  reduce usando la regla 45 ($@12)

    $@12  ir al estado 94


estado 80

   48 condicion: comparacion op_or_ . $@13 comparacion

    $default  reduce usando la regla 47 ($@13)

    $@13  ir al estado 95


estado 81

   56 comparacion: expresion OP_COMPARACION . $@14 expresion

    $default  reduce usando la regla 55 ($@14)

    $@14  ir al estado 96


estado 82

   57 expresion: expresion OP_SUM . termino

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    termino  ir al estado 97
    factor   ir al estado 63


estado 83

   58 expresion: expresion OP_RES . termino

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    termino  ir al estado 98
    factor   ir al estado 63


estado 84

   64 termino: termino OP_MUL . factor

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    factor  ir al estado 99


estado 85

   65 termino: termino OP_DIV . factor

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    factor  ir al estado 100


estado 86

   26 ciclo: WHILE $@6 CAR_PA condicion . CAR_PC bloque endw_

    CAR_PC  desplazar e ir al estado 101


estado 87

   24 ciclo: REPEAT $@5 bloque UNTIL . condicion

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    OP_NOT      desplazar e ir al estado 56
    CAR_PA      desplazar e ir al estado 57

    $default  reduce usando la regla 60 ($@15)

    condicion    ir al estado 102
    comparacion  ir al estado 59
    expresion    ir al estado 60
    between      ir al estado 61
    $@15         ir al estado 37
    termino      ir al estado 62
    factor       ir al estado 63


estado 88

   63 between: $@15 BETWEEN CAR_PA ID . $@16 CAR_COMA CAR_CA expresion $@17 CAR_PYC expresion CAR_CC CAR_PC

    $default  reduce usando la regla 61 ($@16)

    $@16  ir al estado 103


estado 89

   49 condicion: OP_NOT CAR_PA comparacion . OP_AND comparacion CAR_PC
   50          | OP_NOT CAR_PA comparacion . OP_OR comparacion CAR_PC

    OP_AND  desplazar e ir al estado 104
    OP_OR   desplazar e ir al estado 105


estado 90

   56 comparacion: expresion . OP_COMPARACION $@14 expresion
   57 expresion: expresion . OP_SUM termino
   58          | expresion . OP_RES termino
   71 factor: CAR_PA expresion . CAR_PC

    OP_COMPARACION  desplazar e ir al estado 81
    OP_SUM          desplazar e ir al estado 82
    OP_RES          desplazar e ir al estado 83
    CAR_PC          desplazar e ir al estado 91


estado 91

   71 factor: CAR_PA expresion CAR_PC .

    $default  reduce usando la regla 71 (factor)


estado 92

   41 then_: THEN .

    $default  reduce usando la regla 41 (then_)


estado 93

   38 seleccion: IF CAR_PA condicion CAR_PC then_ . bloque $@10 ENDIF
   40          | IF CAR_PA condicion CAR_PC then_ . bloque $@11 else_ bloque ENDIF

    ID      desplazar e ir al estado 23
    IF      desplazar e ir al estado 24
    WHILE   desplazar e ir al estado 25
    REPEAT  desplazar e ir al estado 26
    WRITE   desplazar e ir al estado 27
    READ    desplazar e ir al estado 28

    $default  reduce usando la regla 60 ($@15)

    bloque          ir al estado 106
    sentencia       ir al estado 30
    ciclo           ir al estado 31
    asignacion      ir al estado 32
    lista_id        ir al estado 33
    entrada_salida  ir al estado 34
    seleccion       ir al estado 35
    between         ir al estado 36
    $@15            ir al estado 37


estado 94

   46 condicion: comparacion op_and_ $@12 . comparacion

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    comparacion  ir al estado 107
    expresion    ir al estado 60
    termino      ir al estado 62
    factor       ir al estado 63


estado 95

   48 condicion: comparacion op_or_ $@13 . comparacion

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    comparacion  ir al estado 108
    expresion    ir al estado 60
    termino      ir al estado 62
    factor       ir al estado 63


estado 96

   56 comparacion: expresion OP_COMPARACION $@14 . expresion

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    expresion  ir al estado 109
    termino    ir al estado 62
    factor     ir al estado 63


estado 97

   57 expresion: expresion OP_SUM termino .
   64 termino: termino . OP_MUL factor
   65        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 84
    OP_DIV  desplazar e ir al estado 85

    $default  reduce usando la regla 57 (expresion)


estado 98

   58 expresion: expresion OP_RES termino .
   64 termino: termino . OP_MUL factor
   65        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 84
    OP_DIV  desplazar e ir al estado 85

    $default  reduce usando la regla 58 (expresion)


estado 99

   64 termino: termino OP_MUL factor .

    $default  reduce usando la regla 64 (termino)


estado 100

   65 termino: termino OP_DIV factor .

    $default  reduce usando la regla 65 (termino)


estado 101

   26 ciclo: WHILE $@6 CAR_PA condicion CAR_PC . bloque endw_

    ID      desplazar e ir al estado 23
    IF      desplazar e ir al estado 24
    WHILE   desplazar e ir al estado 25
    REPEAT  desplazar e ir al estado 26
    WRITE   desplazar e ir al estado 27
    READ    desplazar e ir al estado 28

    $default  reduce usando la regla 60 ($@15)

    bloque          ir al estado 110
    sentencia       ir al estado 30
    ciclo           ir al estado 31
    asignacion      ir al estado 32
    lista_id        ir al estado 33
    entrada_salida  ir al estado 34
    seleccion       ir al estado 35
    between         ir al estado 36
    $@15            ir al estado 37


estado 102

   24 ciclo: REPEAT $@5 bloque UNTIL condicion .

    $default  reduce usando la regla 24 (ciclo)


estado 103

   63 between: $@15 BETWEEN CAR_PA ID $@16 . CAR_COMA CAR_CA expresion $@17 CAR_PYC expresion CAR_CC CAR_PC

    CAR_COMA  desplazar e ir al estado 111


estado 104

   49 condicion: OP_NOT CAR_PA comparacion OP_AND . comparacion CAR_PC

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    comparacion  ir al estado 112
    expresion    ir al estado 60
    termino      ir al estado 62
    factor       ir al estado 63


estado 105

   50 condicion: OP_NOT CAR_PA comparacion OP_OR . comparacion CAR_PC

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    comparacion  ir al estado 113
    expresion    ir al estado 60
    termino      ir al estado 62
    factor       ir al estado 63


estado 106

   16 bloque: bloque . sentencia
   38 seleccion: IF CAR_PA condicion CAR_PC then_ bloque . $@10 ENDIF
   40          | IF CAR_PA condicion CAR_PC then_ bloque . $@11 else_ bloque ENDIF

    ID      desplazar e ir al estado 23
    IF      desplazar e ir al estado 24
    WHILE   desplazar e ir al estado 25
    REPEAT  desplazar e ir al estado 26
    WRITE   desplazar e ir al estado 27
    READ    desplazar e ir al estado 28

    ELSE      reduce usando la regla 39 ($@11)
    BETWEEN   reduce usando la regla 60 ($@15)
    $default  reduce usando la regla 37 ($@10)

    sentencia       ir al estado 49
    ciclo           ir al estado 31
    asignacion      ir al estado 32
    lista_id        ir al estado 33
    entrada_salida  ir al estado 34
    seleccion       ir al estado 35
    $@10            ir al estado 114
    $@11            ir al estado 115
    between         ir al estado 36
    $@15            ir al estado 37


estado 107

   46 condicion: comparacion op_and_ $@12 comparacion .

    $default  reduce usando la regla 46 (condicion)


estado 108

   48 condicion: comparacion op_or_ $@13 comparacion .

    $default  reduce usando la regla 48 (condicion)


estado 109

   56 comparacion: expresion OP_COMPARACION $@14 expresion .
   57 expresion: expresion . OP_SUM termino
   58          | expresion . OP_RES termino

    OP_SUM  desplazar e ir al estado 82
    OP_RES  desplazar e ir al estado 83

    $default  reduce usando la regla 56 (comparacion)


estado 110

   16 bloque: bloque . sentencia
   26 ciclo: WHILE $@6 CAR_PA condicion CAR_PC bloque . endw_

    ID      desplazar e ir al estado 23
    IF      desplazar e ir al estado 24
    WHILE   desplazar e ir al estado 25
    ENDW    desplazar e ir al estado 116
    REPEAT  desplazar e ir al estado 26
    WRITE   desplazar e ir al estado 27
    READ    desplazar e ir al estado 28

    $default  reduce usando la regla 60 ($@15)

    sentencia       ir al estado 49
    ciclo           ir al estado 31
    endw_           ir al estado 117
    asignacion      ir al estado 32
    lista_id        ir al estado 33
    entrada_salida  ir al estado 34
    seleccion       ir al estado 35
    between         ir al estado 36
    $@15            ir al estado 37


estado 111

   63 between: $@15 BETWEEN CAR_PA ID $@16 CAR_COMA . CAR_CA expresion $@17 CAR_PYC expresion CAR_CC CAR_PC

    CAR_CA  desplazar e ir al estado 118


estado 112

   49 condicion: OP_NOT CAR_PA comparacion OP_AND comparacion . CAR_PC

    CAR_PC  desplazar e ir al estado 119


estado 113

   50 condicion: OP_NOT CAR_PA comparacion OP_OR comparacion . CAR_PC

    CAR_PC  desplazar e ir al estado 120


estado 114

   38 seleccion: IF CAR_PA condicion CAR_PC then_ bloque $@10 . ENDIF

    ENDIF  desplazar e ir al estado 121


estado 115

   40 seleccion: IF CAR_PA condicion CAR_PC then_ bloque $@11 . else_ bloque ENDIF

    ELSE  desplazar e ir al estado 122

    else_  ir al estado 123


estado 116

   27 endw_: ENDW .

    $default  reduce usando la regla 27 (endw_)


estado 117

   26 ciclo: WHILE $@6 CAR_PA condicion CAR_PC bloque endw_ .

    $default  reduce usando la regla 26 (ciclo)


estado 118

   63 between: $@15 BETWEEN CAR_PA ID $@16 CAR_COMA CAR_CA . expresion $@17 CAR_PYC expresion CAR_CC CAR_PC

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    expresion  ir al estado 124
    termino    ir al estado 62
    factor     ir al estado 63


estado 119

   49 condicion: OP_NOT CAR_PA comparacion OP_AND comparacion CAR_PC .

    $default  reduce usando la regla 49 (condicion)


estado 120

   50 condicion: OP_NOT CAR_PA comparacion OP_OR comparacion CAR_PC .

    $default  reduce usando la regla 50 (condicion)


estado 121

   38 seleccion: IF CAR_PA condicion CAR_PC then_ bloque $@10 ENDIF .

    $default  reduce usando la regla 38 (seleccion)


estado 122

   42 else_: ELSE .

    $default  reduce usando la regla 42 (else_)


estado 123

   40 seleccion: IF CAR_PA condicion CAR_PC then_ bloque $@11 else_ . bloque ENDIF

    ID      desplazar e ir al estado 23
    IF      desplazar e ir al estado 24
    WHILE   desplazar e ir al estado 25
    REPEAT  desplazar e ir al estado 26
    WRITE   desplazar e ir al estado 27
    READ    desplazar e ir al estado 28

    $default  reduce usando la regla 60 ($@15)

    bloque          ir al estado 125
    sentencia       ir al estado 30
    ciclo           ir al estado 31
    asignacion      ir al estado 32
    lista_id        ir al estado 33
    entrada_salida  ir al estado 34
    seleccion       ir al estado 35
    between         ir al estado 36
    $@15            ir al estado 37


estado 124

   57 expresion: expresion . OP_SUM termino
   58          | expresion . OP_RES termino
   63 between: $@15 BETWEEN CAR_PA ID $@16 CAR_COMA CAR_CA expresion . $@17 CAR_PYC expresion CAR_CC CAR_PC

    OP_SUM  desplazar e ir al estado 82
    OP_RES  desplazar e ir al estado 83

    $default  reduce usando la regla 62 ($@17)

    $@17  ir al estado 126


estado 125

   16 bloque: bloque . sentencia
   40 seleccion: IF CAR_PA condicion CAR_PC then_ bloque $@11 else_ bloque . ENDIF

    ID      desplazar e ir al estado 23
    IF      desplazar e ir al estado 24
    ENDIF   desplazar e ir al estado 127
    WHILE   desplazar e ir al estado 25
    REPEAT  desplazar e ir al estado 26
    WRITE   desplazar e ir al estado 27
    READ    desplazar e ir al estado 28

    $default  reduce usando la regla 60 ($@15)

    sentencia       ir al estado 49
    ciclo           ir al estado 31
    asignacion      ir al estado 32
    lista_id        ir al estado 33
    entrada_salida  ir al estado 34
    seleccion       ir al estado 35
    between         ir al estado 36
    $@15            ir al estado 37


estado 126

   63 between: $@15 BETWEEN CAR_PA ID $@16 CAR_COMA CAR_CA expresion $@17 . CAR_PYC expresion CAR_CC CAR_PC

    CAR_PYC  desplazar e ir al estado 128


estado 127

   40 seleccion: IF CAR_PA condicion CAR_PC then_ bloque $@11 else_ bloque ENDIF .

    $default  reduce usando la regla 40 (seleccion)


estado 128

   63 between: $@15 BETWEEN CAR_PA ID $@16 CAR_COMA CAR_CA expresion $@17 CAR_PYC . expresion CAR_CC CAR_PC

    ID          desplazar e ir al estado 52
    CONST_INT   desplazar e ir al estado 53
    CONST_STR   desplazar e ir al estado 54
    CONST_REAL  desplazar e ir al estado 55
    CAR_PA      desplazar e ir al estado 57

    expresion  ir al estado 129
    termino    ir al estado 62
    factor     ir al estado 63


estado 129

   57 expresion: expresion . OP_SUM termino
   58          | expresion . OP_RES termino
   63 between: $@15 BETWEEN CAR_PA ID $@16 CAR_COMA CAR_CA expresion $@17 CAR_PYC expresion . CAR_CC CAR_PC

    OP_SUM  desplazar e ir al estado 82
    OP_RES  desplazar e ir al estado 83
    CAR_CC  desplazar e ir al estado 130


estado 130

   63 between: $@15 BETWEEN CAR_PA ID $@16 CAR_COMA CAR_CA expresion $@17 CAR_PYC expresion CAR_CC . CAR_PC

    CAR_PC  desplazar e ir al estado 131


estado 131

   63 between: $@15 BETWEEN CAR_PA ID $@16 CAR_COMA CAR_CA expresion $@17 CAR_PYC expresion CAR_CC CAR_PC .

    $default  reduce usando la regla 63 (between)
